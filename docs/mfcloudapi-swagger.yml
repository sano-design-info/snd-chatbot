{
  'openapi': '3.0.2',
  'info':
    {
      'version': '2.0.0',
      'title': 'moneyforward invoice api',
      'description': "<h3>\n  マネーフォワード クラウド請求書のAPIドキュメントです。\n</h3>\n<p>\n  各APIのパラメータやレスポンスの仕様が記載されている他、このページから実際にAPIを実行することが可能です。<br />\n  <small>※APIを実行するためには、その前にOAuth認証を実施する必要があります</small><br />\n  <small>※更新系のAPIは、実際にデータが変更されます</small>\n</p>\n<h4>\n  OAuth認証手順\n</h4>\n<ol>\n  <li>OAuthアプリケーション一覧に、このページで認証するアプリケーションを登録します</li>\n    <ul>\n      <li>Redirect URI は <code>https://invoice.moneyforward.com/api/swagger_ui/oauth2_redirect</code> にしてください</li>\n      <li>登録時に表示される Client Id, Client Secret が必要になるので、画面を表示したままにする等、参照できるようにしておいてください</li>\n    </ul>\n  <li>このページの Authorize ボタンをクリックし、表示されたモーダルに認証情報を入力して、 Authorize ボタンをクリックします</li>\n    <ul>\n      <li>client_id, client_secret に、該当のアプリケーションの Client Id, Client Secret を入力してください</li>\n      <li>実行するAPIに必要な権限にチェックをしてください</li>\n    </ul>\n  <li>新しいタブでアプリケーションの承認画面が表示されるので、許可ボタンをクリックします</li>\n    <ul>\n      <li>既に承認済みの場合には、この手順はスキップされます</li>\n    </ul>\n  <li>モーダルに Autorized と表示されれば、認証は成功です</li>\n    <ul>\n      <li>Close ボタンをクリックし、モーダルを閉じてください</li>\n    </ul>\n</ol>\n<h4>\n  API実行手順\n</h4>\n<ol>\n  <li>実行したいAPIをクリックします</li>\n  <li>パラメータとレスポンスについての説明が表示されますので、仕様を確認して Try it out ボタンをクリックします</li>\n  <li>フォームが表示されますので、指定したい内容を入力し、 Execute ボタンをクリックします</li>\n  <li>API実行に使ったコマンドと、API実行結果が表示されます</li>\n</ol>\n",
    },
  'servers': [{ 'url': 'https://invoice.moneyforward.com' }],
  'paths':
    {
      '/api/v2/office':
        {
          'get':
            {
              'operationId': 'getOffice',
              'summary': '事業者情報の取得',
              'security': [{ 'iv_auth': ['read', 'write'] }],
              'responses':
                {
                  '400':
                    {
                      'description': 'Bad request',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '401':
                    {
                      'description': 'Unauthorized',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '402':
                    {
                      'description': 'Payment required',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '403':
                    {
                      'description': 'Forbidden',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '404':
                    {
                      'description': 'No resource found',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '406':
                    {
                      'description': 'Not acceptable',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '408':
                    {
                      'description': 'Request Timeout',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '422':
                    {
                      'description': 'Unprocessable entity',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '429':
                    {
                      'description': 'Exceed call limit',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '500':
                    {
                      'description': 'Internal server error',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '200':
                    {
                      'description': '事業者情報',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  'type': 'object',
                                  'required': ['data'],
                                  'properties':
                                    {
                                      'data':
                                        {
                                          'type': 'object',
                                          '$ref': '#/components/schemas/JSONAPI_OfficeResponse',
                                        },
                                    },
                                },
                            },
                        },
                    },
                },
            },
          'patch':
            {
              'operationId': 'updateOffice',
              'summary': '事業者情報の更新',
              'security': [{ 'iv_auth': ['write'] }],
              'requestBody':
                {
                  'required': true,
                  'content':
                    {
                      'application/json':
                        {
                          'schema':
                            {
                              'type': 'object',
                              'required': ['office'],
                              'additionalProperties': false,
                              'properties':
                                {
                                  'office':
                                    {
                                      '$ref': '#/components/schemas/OfficeRequest',
                                    },
                                },
                            },
                        },
                    },
                },
              'responses':
                {
                  '400':
                    {
                      'description': 'Bad request',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '401':
                    {
                      'description': 'Unauthorized',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '402':
                    {
                      'description': 'Payment required',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '403':
                    {
                      'description': 'Forbidden',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '404':
                    {
                      'description': 'No resource found',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '406':
                    {
                      'description': 'Not acceptable',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '408':
                    {
                      'description': 'Request Timeout',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '422':
                    {
                      'description': 'Unprocessable entity',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '429':
                    {
                      'description': 'Exceed call limit',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '500':
                    {
                      'description': 'Internal server error',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '200':
                    {
                      'description': '成功',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  'type': 'object',
                                  'required': ['data'],
                                  'properties':
                                    {
                                      'data':
                                        {
                                          'type': 'object',
                                          '$ref': '#/components/schemas/JSONAPI_OfficeResponse',
                                        },
                                    },
                                },
                            },
                        },
                    },
                },
            },
        },
      '/api/v2/partners':
        {
          'get':
            {
              'operationId': 'getPartners',
              'summary': '取引先一覧の取得',
              'security': [{ 'iv_auth': ['read', 'write'] }],
              'parameters':
                [
                  {
                    'name': 'page',
                    'in': 'query',
                    'description': 'ページ番号',
                    'schema': { 'type': 'integer', 'minimum': 1, 'default': 1 },
                  },
                  {
                    'name': 'per_page',
                    'in': 'query',
                    'description': '1ページあたりの表示数',
                    'schema':
                      {
                        'type': 'integer',
                        'minimum': 1,
                        'maximum': 100,
                        'default': 100,
                      },
                  },
                ],
              'responses':
                {
                  '400':
                    {
                      'description': 'Bad request',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '401':
                    {
                      'description': 'Unauthorized',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '402':
                    {
                      'description': 'Payment required',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '403':
                    {
                      'description': 'Forbidden',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '404':
                    {
                      'description': 'No resource found',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '406':
                    {
                      'description': 'Not acceptable',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '408':
                    {
                      'description': 'Request Timeout',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '422':
                    {
                      'description': 'Unprocessable entity',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '429':
                    {
                      'description': 'Exceed call limit',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '500':
                    {
                      'description': 'Internal server error',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '200':
                    {
                      'description': '取引先一覧',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  'type': 'object',
                                  'required': ['data', 'meta', 'included'],
                                  'properties':
                                    {
                                      'data':
                                        {
                                          'type': 'array',
                                          'items':
                                            {
                                              'allOf':
                                                [
                                                  {
                                                    '$ref': '#/components/schemas/JSONAPI_PartnerResponse',
                                                  },
                                                  {
                                                    'type': 'object',
                                                    'additionalProperties': false,
                                                    'properties':
                                                      {
                                                        'relationships':
                                                          {
                                                            'type': 'object',
                                                            'additionalProperties': false,
                                                            'properties':
                                                              {
                                                                'departments':
                                                                  {
                                                                    'type': 'object',
                                                                    'additionalProperties': false,
                                                                    'required':
                                                                      ['data'],
                                                                    'properties':
                                                                      {
                                                                        'data':
                                                                          {
                                                                            'type': 'array',
                                                                            'items':
                                                                              {
                                                                                'type': 'object',
                                                                                'additionalProperties': false,
                                                                                'required':
                                                                                  [
                                                                                    'id',
                                                                                    'type',
                                                                                  ],
                                                                                'properties':
                                                                                  {
                                                                                    'id':
                                                                                      {
                                                                                        'type': 'string',
                                                                                      },
                                                                                    'type':
                                                                                      {
                                                                                        'type': 'string',
                                                                                      },
                                                                                  },
                                                                              },
                                                                          },
                                                                      },
                                                                  },
                                                              },
                                                          },
                                                      },
                                                  },
                                                ],
                                            },
                                        },
                                      'included':
                                        {
                                          'type': 'array',
                                          'items':
                                            {
                                              'oneOf':
                                                [
                                                  {
                                                    '$ref': '#/components/schemas/JSONAPI_PartnerDepartmentResponse',
                                                  },
                                                ],
                                            },
                                        },
                                      'meta':
                                        {
                                          '$ref': '#/components/schemas/IndexMetaResponse',
                                        },
                                    },
                                },
                            },
                        },
                    },
                },
            },
          'post':
            {
              'operationId': 'createPartner',
              'summary': '取引先の作成',
              'security': [{ 'iv_auth': ['write'] }],
              'requestBody':
                {
                  'required': true,
                  'content':
                    {
                      'application/json':
                        {
                          'schema':
                            {
                              'type': 'object',
                              'required': ['partner'],
                              'additionalProperties': false,
                              'properties':
                                {
                                  'partner':
                                    {
                                      'type': 'object',
                                      'allOf':
                                        [
                                          {
                                            '$ref': '#/components/schemas/PartnerRequest',
                                          },
                                          {
                                            '$ref': '#/components/schemas/CreatePartnerDepartmentRequest',
                                          },
                                          {
                                            'type': 'object',
                                            'required': ['name'],
                                          },
                                        ],
                                    },
                                },
                            },
                        },
                    },
                },
              'responses':
                {
                  '400':
                    {
                      'description': 'Bad request',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '401':
                    {
                      'description': 'Unauthorized',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '402':
                    {
                      'description': 'Payment required',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '403':
                    {
                      'description': 'Forbidden',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '404':
                    {
                      'description': 'No resource found',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '406':
                    {
                      'description': 'Not acceptable',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '408':
                    {
                      'description': 'Request Timeout',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '422':
                    {
                      'description': 'Unprocessable entity',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '429':
                    {
                      'description': 'Exceed call limit',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '500':
                    {
                      'description': 'Internal server error',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '201':
                    {
                      'description': '成功',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  'type': 'object',
                                  'required': ['data', 'included'],
                                  'properties':
                                    {
                                      'data':
                                        {
                                          'type': 'object',
                                          'allOf':
                                            [
                                              {
                                                '$ref': '#/components/schemas/JSONAPI_PartnerResponse',
                                              },
                                              {
                                                'type': 'object',
                                                'additionalProperties': false,
                                                'properties':
                                                  {
                                                    'relationships':
                                                      {
                                                        'type': 'object',
                                                        'additionalProperties': false,
                                                        'properties':
                                                          {
                                                            'departments':
                                                              {
                                                                'type': 'object',
                                                                'additionalProperties': false,
                                                                'required':
                                                                  ['data'],
                                                                'properties':
                                                                  {
                                                                    'data':
                                                                      {
                                                                        'type': 'array',
                                                                        'items':
                                                                          {
                                                                            'type': 'object',
                                                                            'additionalProperties': false,
                                                                            'required':
                                                                              [
                                                                                'id',
                                                                                'type',
                                                                              ],
                                                                            'properties':
                                                                              {
                                                                                'id':
                                                                                  {
                                                                                    'type': 'string',
                                                                                  },
                                                                                'type':
                                                                                  {
                                                                                    'type': 'string',
                                                                                  },
                                                                              },
                                                                          },
                                                                      },
                                                                  },
                                                              },
                                                          },
                                                      },
                                                  },
                                              },
                                            ],
                                        },
                                      'included':
                                        {
                                          'type': 'array',
                                          'items':
                                            {
                                              'oneOf':
                                                [
                                                  {
                                                    '$ref': '#/components/schemas/JSONAPI_PartnerDepartmentResponse',
                                                  },
                                                ],
                                            },
                                        },
                                    },
                                },
                            },
                        },
                    },
                },
            },
        },
      '/api/v2/partners/{id}':
        {
          'get':
            {
              'operationId': 'getPartner',
              'summary': '取引先の取得',
              'security': [{ 'iv_auth': ['read', 'write'] }],
              'parameters':
                [
                  {
                    'name': 'id',
                    'in': 'path',
                    'required': true,
                    'schema': { 'type': 'string' },
                  },
                ],
              'responses':
                {
                  '400':
                    {
                      'description': 'Bad request',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '401':
                    {
                      'description': 'Unauthorized',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '402':
                    {
                      'description': 'Payment required',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '403':
                    {
                      'description': 'Forbidden',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '404':
                    {
                      'description': 'No resource found',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '406':
                    {
                      'description': 'Not acceptable',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '408':
                    {
                      'description': 'Request Timeout',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '422':
                    {
                      'description': 'Unprocessable entity',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '429':
                    {
                      'description': 'Exceed call limit',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '500':
                    {
                      'description': 'Internal server error',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '200':
                    {
                      'description': '取引先',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  'type': 'object',
                                  'required': ['data', 'included'],
                                  'properties':
                                    {
                                      'data':
                                        {
                                          'type': 'object',
                                          'allOf':
                                            [
                                              {
                                                '$ref': '#/components/schemas/JSONAPI_PartnerResponse',
                                              },
                                              {
                                                'type': 'object',
                                                'additionalProperties': false,
                                                'properties':
                                                  {
                                                    'relationships':
                                                      {
                                                        'type': 'object',
                                                        'additionalProperties': false,
                                                        'properties':
                                                          {
                                                            'departments':
                                                              {
                                                                'type': 'object',
                                                                'additionalProperties': false,
                                                                'required':
                                                                  ['data'],
                                                                'properties':
                                                                  {
                                                                    'data':
                                                                      {
                                                                        'type': 'array',
                                                                        'items':
                                                                          {
                                                                            'type': 'object',
                                                                            'additionalProperties': false,
                                                                            'required':
                                                                              [
                                                                                'id',
                                                                                'type',
                                                                              ],
                                                                            'properties':
                                                                              {
                                                                                'id':
                                                                                  {
                                                                                    'type': 'string',
                                                                                  },
                                                                                'type':
                                                                                  {
                                                                                    'type': 'string',
                                                                                  },
                                                                              },
                                                                          },
                                                                      },
                                                                  },
                                                              },
                                                          },
                                                      },
                                                  },
                                              },
                                            ],
                                        },
                                      'included':
                                        {
                                          'type': 'array',
                                          'items':
                                            {
                                              'oneOf':
                                                [
                                                  {
                                                    '$ref': '#/components/schemas/JSONAPI_PartnerDepartmentResponse',
                                                  },
                                                ],
                                            },
                                        },
                                    },
                                },
                            },
                        },
                    },
                },
            },
          'patch':
            {
              'operationId': 'updatePartner',
              'summary': '取引先の更新',
              'security': [{ 'iv_auth': ['write'] }],
              'parameters':
                [
                  {
                    'name': 'id',
                    'in': 'path',
                    'required': true,
                    'schema': { 'type': 'string' },
                  },
                ],
              'requestBody':
                {
                  'required': true,
                  'content':
                    {
                      'application/json':
                        {
                          'schema':
                            {
                              'type': 'object',
                              'required': ['partner'],
                              'additionalProperties': false,
                              'properties':
                                {
                                  'partner':
                                    {
                                      'type': 'object',
                                      'allOf':
                                        [
                                          {
                                            '$ref': '#/components/schemas/PartnerRequest',
                                          },
                                          {
                                            'type': 'object',
                                            'additionalProperties': false,
                                            'properties':
                                              {
                                                'departments':
                                                  {
                                                    'type': 'array',
                                                    'items':
                                                      {
                                                        'allOf':
                                                          [
                                                            {
                                                              'type': 'object',
                                                              'additionalProperties': false,
                                                              'properties':
                                                                {
                                                                  'id':
                                                                    {
                                                                      'type': 'string',
                                                                    },
                                                                },
                                                            },
                                                            {
                                                              '$ref': '#/components/schemas/UpdatePartnerDepartmentRequest',
                                                            },
                                                          ],
                                                      },
                                                  },
                                              },
                                          },
                                        ],
                                    },
                                },
                            },
                        },
                    },
                },
              'responses':
                {
                  '400':
                    {
                      'description': 'Bad request',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '401':
                    {
                      'description': 'Unauthorized',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '402':
                    {
                      'description': 'Payment required',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '403':
                    {
                      'description': 'Forbidden',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '404':
                    {
                      'description': 'No resource found',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '406':
                    {
                      'description': 'Not acceptable',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '408':
                    {
                      'description': 'Request Timeout',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '422':
                    {
                      'description': 'Unprocessable entity',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '429':
                    {
                      'description': 'Exceed call limit',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '500':
                    {
                      'description': 'Internal server error',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '200':
                    {
                      'description': '成功',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  'type': 'object',
                                  'required': ['data', 'included'],
                                  'properties':
                                    {
                                      'data':
                                        {
                                          'type': 'object',
                                          'allOf':
                                            [
                                              {
                                                '$ref': '#/components/schemas/JSONAPI_PartnerResponse',
                                              },
                                              {
                                                'type': 'object',
                                                'additionalProperties': false,
                                                'properties':
                                                  {
                                                    'relationships':
                                                      {
                                                        'type': 'object',
                                                        'additionalProperties': false,
                                                        'properties':
                                                          {
                                                            'departments':
                                                              {
                                                                'type': 'object',
                                                                'additionalProperties': false,
                                                                'required':
                                                                  ['data'],
                                                                'properties':
                                                                  {
                                                                    'data':
                                                                      {
                                                                        'type': 'array',
                                                                        'items':
                                                                          {
                                                                            'type': 'object',
                                                                            'additionalProperties': false,
                                                                            'required':
                                                                              [
                                                                                'id',
                                                                                'type',
                                                                              ],
                                                                            'properties':
                                                                              {
                                                                                'id':
                                                                                  {
                                                                                    'type': 'string',
                                                                                  },
                                                                                'type':
                                                                                  {
                                                                                    'type': 'string',
                                                                                  },
                                                                              },
                                                                          },
                                                                      },
                                                                  },
                                                              },
                                                          },
                                                      },
                                                  },
                                              },
                                            ],
                                        },
                                      'included':
                                        {
                                          'type': 'array',
                                          'items':
                                            {
                                              'oneOf':
                                                [
                                                  {
                                                    '$ref': '#/components/schemas/JSONAPI_PartnerDepartmentResponse',
                                                  },
                                                ],
                                            },
                                        },
                                    },
                                },
                            },
                        },
                    },
                },
            },
          'delete':
            {
              'operationId': 'deletePartner',
              'summary': '取引先の削除',
              'security': [{ 'iv_auth': ['write'] }],
              'parameters':
                [
                  {
                    'name': 'id',
                    'in': 'path',
                    'required': true,
                    'schema': { 'type': 'string' },
                  },
                ],
              'responses':
                {
                  '400':
                    {
                      'description': 'Bad request',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '401':
                    {
                      'description': 'Unauthorized',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '402':
                    {
                      'description': 'Payment required',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '403':
                    {
                      'description': 'Forbidden',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '404':
                    {
                      'description': 'No resource found',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '406':
                    {
                      'description': 'Not acceptable',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '408':
                    {
                      'description': 'Request Timeout',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '422':
                    {
                      'description': 'Unprocessable entity',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '429':
                    {
                      'description': 'Exceed call limit',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '500':
                    {
                      'description': 'Internal server error',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '204': { 'description': '成功' },
                },
            },
        },
      '/api/v2/items':
        {
          'get':
            {
              'operationId': 'getItems',
              'summary': '品目一覧の取得',
              'security': [{ 'iv_auth': ['read', 'write'] }],
              'parameters':
                [
                  {
                    'name': 'page',
                    'in': 'query',
                    'description': 'ページ番号',
                    'schema': { 'type': 'integer', 'minimum': 1, 'default': 1 },
                  },
                  {
                    'name': 'per_page',
                    'in': 'query',
                    'description': '1ページあたりの表示数',
                    'schema':
                      {
                        'type': 'integer',
                        'minimum': 1,
                        'maximum': 100,
                        'default': 100,
                      },
                  },
                  {
                    'name': 'excise_type',
                    'in': 'query',
                    'description': "消費税項目のデータ型<br />\nboolean を指定した場合は、 BooleanExciseRequest, BooleanExciseResponse になり、<br />\nenum を指定した場合は、 EnumExciseRequest, EnumExciseResponse になります\nまた、この項目を指定した場合、消費税項目名が excise になります。\n",
                    'schema':
                      {
                        'type': 'string',
                        'enum': ['boolean', 'enum'],
                        'default': 'boolean',
                      },
                  },
                ],
              'responses':
                {
                  '400':
                    {
                      'description': 'Bad request',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '401':
                    {
                      'description': 'Unauthorized',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '402':
                    {
                      'description': 'Payment required',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '403':
                    {
                      'description': 'Forbidden',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '404':
                    {
                      'description': 'No resource found',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '406':
                    {
                      'description': 'Not acceptable',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '408':
                    {
                      'description': 'Request Timeout',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '422':
                    {
                      'description': 'Unprocessable entity',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '429':
                    {
                      'description': 'Exceed call limit',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '500':
                    {
                      'description': 'Internal server error',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '200':
                    {
                      'description': '品目一覧',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  'type': 'object',
                                  'required': ['data', 'meta'],
                                  'properties':
                                    {
                                      'data':
                                        {
                                          'type': 'array',
                                          'items':
                                            {
                                              'oneOf':
                                                [
                                                  {
                                                    '$ref': '#/components/schemas/JSONAPI_BasicItemResponse',
                                                  },
                                                  {
                                                    '$ref': '#/components/schemas/JSONAPI_BooleanExciseItemResponse',
                                                  },
                                                  {
                                                    '$ref': '#/components/schemas/JSONAPI_EnumExciseItemResponse',
                                                  },
                                                ],
                                            },
                                        },
                                      'meta':
                                        {
                                          'type': 'object',
                                          'allOf':
                                            [
                                              {
                                                '$ref': '#/components/schemas/IndexMetaResponse',
                                              },
                                              {
                                                '$ref': '#/components/schemas/ExciseTypeMetaResponse',
                                              },
                                            ],
                                        },
                                    },
                                },
                            },
                        },
                    },
                },
            },
          'post':
            {
              'operationId': 'createItem',
              'summary': '品目の作成',
              'security': [{ 'iv_auth': ['write'] }],
              'parameters':
                [
                  {
                    'name': 'excise_type',
                    'in': 'query',
                    'description': "消費税項目のデータ型<br />\nboolean を指定した場合は、 BooleanExciseRequest, BooleanExciseResponse になり、<br />\nenum を指定した場合は、 EnumExciseRequest, EnumExciseResponse になります\nまた、この項目を指定した場合、消費税項目名が excise になります。\n",
                    'schema':
                      {
                        'type': 'string',
                        'enum': ['boolean', 'enum'],
                        'default': 'boolean',
                      },
                  },
                ],
              'requestBody':
                {
                  'required': true,
                  'content':
                    {
                      'application/json':
                        {
                          'schema':
                            {
                              'type': 'object',
                              'required': ['item'],
                              'additionalProperties': false,
                              'properties':
                                {
                                  'item':
                                    {
                                      'type': 'object',
                                      'oneOf':
                                        [
                                          {
                                            'type': 'object',
                                            'allOf':
                                              [
                                                {
                                                  '$ref': '#/components/schemas/BooleanExciseItemRequest',
                                                },
                                                {
                                                  'type': 'object',
                                                  'required': ['name'],
                                                },
                                              ],
                                          },
                                          {
                                            'type': 'object',
                                            'allOf':
                                              [
                                                {
                                                  '$ref': '#/components/schemas/EnumExciseItemRequest',
                                                },
                                                {
                                                  'type': 'object',
                                                  'required':
                                                    ['name', 'excise'],
                                                },
                                              ],
                                          },
                                        ],
                                    },
                                },
                            },
                        },
                    },
                },
              'responses':
                {
                  '400':
                    {
                      'description': 'Bad request',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '401':
                    {
                      'description': 'Unauthorized',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '402':
                    {
                      'description': 'Payment required',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '403':
                    {
                      'description': 'Forbidden',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '404':
                    {
                      'description': 'No resource found',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '406':
                    {
                      'description': 'Not acceptable',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '408':
                    {
                      'description': 'Request Timeout',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '422':
                    {
                      'description': 'Unprocessable entity',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '429':
                    {
                      'description': 'Exceed call limit',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '500':
                    {
                      'description': 'Internal server error',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '201':
                    {
                      'description': '成功',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  'type': 'object',
                                  'required': ['data'],
                                  'properties':
                                    {
                                      'data':
                                        {
                                          'type': 'object',
                                          'oneOf':
                                            [
                                              {
                                                '$ref': '#/components/schemas/JSONAPI_BasicItemResponse',
                                              },
                                              {
                                                '$ref': '#/components/schemas/JSONAPI_BooleanExciseItemResponse',
                                              },
                                              {
                                                '$ref': '#/components/schemas/JSONAPI_EnumExciseItemResponse',
                                              },
                                            ],
                                        },
                                      'meta':
                                        {
                                          '$ref': '#/components/schemas/ExciseTypeMetaResponse',
                                        },
                                    },
                                },
                            },
                        },
                    },
                },
            },
        },
      '/api/v2/items/{id}':
        {
          'get':
            {
              'operationId': 'getItem',
              'summary': '品目の取得',
              'security': [{ 'iv_auth': ['read', 'write'] }],
              'parameters':
                [
                  {
                    'name': 'excise_type',
                    'in': 'query',
                    'description': "消費税項目のデータ型<br />\nboolean を指定した場合は、 BooleanExciseRequest, BooleanExciseResponse になり、<br />\nenum を指定した場合は、 EnumExciseRequest, EnumExciseResponse になります\nまた、この項目を指定した場合、消費税項目名が excise になります。\n",
                    'schema':
                      {
                        'type': 'string',
                        'enum': ['boolean', 'enum'],
                        'default': 'boolean',
                      },
                  },
                  {
                    'name': 'id',
                    'in': 'path',
                    'required': true,
                    'schema': { 'type': 'string' },
                  },
                ],
              'responses':
                {
                  '400':
                    {
                      'description': 'Bad request',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '401':
                    {
                      'description': 'Unauthorized',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '402':
                    {
                      'description': 'Payment required',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '403':
                    {
                      'description': 'Forbidden',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '404':
                    {
                      'description': 'No resource found',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '406':
                    {
                      'description': 'Not acceptable',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '408':
                    {
                      'description': 'Request Timeout',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '422':
                    {
                      'description': 'Unprocessable entity',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '429':
                    {
                      'description': 'Exceed call limit',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '500':
                    {
                      'description': 'Internal server error',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '200':
                    {
                      'description': '品目',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  'type': 'object',
                                  'required': ['data'],
                                  'properties':
                                    {
                                      'data':
                                        {
                                          'type': 'object',
                                          'oneOf':
                                            [
                                              {
                                                '$ref': '#/components/schemas/JSONAPI_BasicItemResponse',
                                              },
                                              {
                                                '$ref': '#/components/schemas/JSONAPI_BooleanExciseItemResponse',
                                              },
                                              {
                                                '$ref': '#/components/schemas/JSONAPI_EnumExciseItemResponse',
                                              },
                                            ],
                                        },
                                      'meta':
                                        {
                                          '$ref': '#/components/schemas/ExciseTypeMetaResponse',
                                        },
                                    },
                                },
                            },
                        },
                    },
                },
            },
          'patch':
            {
              'operationId': 'updateItem',
              'summary': '品目の更新',
              'security': [{ 'iv_auth': ['write'] }],
              'parameters':
                [
                  {
                    'name': 'excise_type',
                    'in': 'query',
                    'description': "消費税項目のデータ型<br />\nboolean を指定した場合は、 BooleanExciseRequest, BooleanExciseResponse になり、<br />\nenum を指定した場合は、 EnumExciseRequest, EnumExciseResponse になります\nまた、この項目を指定した場合、消費税項目名が excise になります。\n",
                    'schema':
                      {
                        'type': 'string',
                        'enum': ['boolean', 'enum'],
                        'default': 'boolean',
                      },
                  },
                  {
                    'name': 'id',
                    'in': 'path',
                    'required': true,
                    'schema': { 'type': 'string' },
                  },
                ],
              'requestBody':
                {
                  'required': true,
                  'content':
                    {
                      'application/json':
                        {
                          'schema':
                            {
                              'type': 'object',
                              'required': ['item'],
                              'additionalProperties': false,
                              'properties':
                                {
                                  'item':
                                    {
                                      'type': 'object',
                                      'oneOf':
                                        [
                                          {
                                            '$ref': '#/components/schemas/BooleanExciseItemRequest',
                                          },
                                          {
                                            '$ref': '#/components/schemas/EnumExciseItemRequest',
                                          },
                                        ],
                                    },
                                },
                            },
                        },
                    },
                },
              'responses':
                {
                  '400':
                    {
                      'description': 'Bad request',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '401':
                    {
                      'description': 'Unauthorized',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '402':
                    {
                      'description': 'Payment required',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '403':
                    {
                      'description': 'Forbidden',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '404':
                    {
                      'description': 'No resource found',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '406':
                    {
                      'description': 'Not acceptable',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '408':
                    {
                      'description': 'Request Timeout',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '422':
                    {
                      'description': 'Unprocessable entity',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '429':
                    {
                      'description': 'Exceed call limit',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '500':
                    {
                      'description': 'Internal server error',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '200':
                    {
                      'description': '成功',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  'type': 'object',
                                  'required': ['data'],
                                  'properties':
                                    {
                                      'data':
                                        {
                                          'type': 'object',
                                          'oneOf':
                                            [
                                              {
                                                '$ref': '#/components/schemas/JSONAPI_BasicItemResponse',
                                              },
                                              {
                                                '$ref': '#/components/schemas/JSONAPI_BooleanExciseItemResponse',
                                              },
                                              {
                                                '$ref': '#/components/schemas/JSONAPI_EnumExciseItemResponse',
                                              },
                                            ],
                                        },
                                      'meta':
                                        {
                                          '$ref': '#/components/schemas/ExciseTypeMetaResponse',
                                        },
                                    },
                                },
                            },
                        },
                    },
                },
            },
          'delete':
            {
              'operationId': 'deleteItem',
              'summary': '品目の削除',
              'security': [{ 'iv_auth': ['write'] }],
              'parameters':
                [
                  {
                    'name': 'id',
                    'in': 'path',
                    'required': true,
                    'schema': { 'type': 'string' },
                  },
                ],
              'responses':
                {
                  '400':
                    {
                      'description': 'Bad request',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '401':
                    {
                      'description': 'Unauthorized',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '402':
                    {
                      'description': 'Payment required',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '403':
                    {
                      'description': 'Forbidden',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '404':
                    {
                      'description': 'No resource found',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '406':
                    {
                      'description': 'Not acceptable',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '408':
                    {
                      'description': 'Request Timeout',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '422':
                    {
                      'description': 'Unprocessable entity',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '429':
                    {
                      'description': 'Exceed call limit',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '500':
                    {
                      'description': 'Internal server error',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '204': { 'description': '成功' },
                },
            },
        },
      '/api/v2/billings':
        {
          'get':
            {
              'operationId': 'getBillings',
              'summary': '請求書一覧の取得',
              'security': [{ 'iv_auth': ['read', 'write'] }],
              'parameters':
                [
                  {
                    'name': 'page',
                    'in': 'query',
                    'description': 'ページ番号',
                    'schema': { 'type': 'integer', 'minimum': 1, 'default': 1 },
                  },
                  {
                    'name': 'per_page',
                    'in': 'query',
                    'description': '1ページあたりの表示数',
                    'schema':
                      {
                        'type': 'integer',
                        'minimum': 1,
                        'maximum': 100,
                        'default': 100,
                      },
                  },
                  {
                    'name': 'excise_type',
                    'in': 'query',
                    'description': "消費税項目のデータ型<br />\nboolean を指定した場合は、 BooleanExciseRequest, BooleanExciseResponse になり、<br />\nenum を指定した場合は、 EnumExciseRequest, EnumExciseResponse になります\nまた、この項目を指定した場合、消費税項目名が excise になります。\n",
                    'schema':
                      {
                        'type': 'string',
                        'enum': ['boolean', 'enum'],
                        'default': 'boolean',
                      },
                  },
                ],
              'responses':
                {
                  '400':
                    {
                      'description': 'Bad request',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '401':
                    {
                      'description': 'Unauthorized',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '402':
                    {
                      'description': 'Payment required',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '403':
                    {
                      'description': 'Forbidden',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '404':
                    {
                      'description': 'No resource found',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '406':
                    {
                      'description': 'Not acceptable',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '408':
                    {
                      'description': 'Request Timeout',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '422':
                    {
                      'description': 'Unprocessable entity',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '429':
                    {
                      'description': 'Exceed call limit',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '500':
                    {
                      'description': 'Internal server error',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '200':
                    {
                      'description': '請求書一覧',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  'type': 'object',
                                  'required': ['data', 'meta', 'included'],
                                  'properties':
                                    {
                                      'data':
                                        {
                                          'type': 'array',
                                          'items':
                                            {
                                              'allOf':
                                                [
                                                  {
                                                    '$ref': '#/components/schemas/JSONAPI_BillingResponse',
                                                  },
                                                  {
                                                    'type': 'object',
                                                    'additionalProperties': false,
                                                    'properties':
                                                      {
                                                        'relationships':
                                                          {
                                                            'type': 'object',
                                                            'additionalProperties': false,
                                                            'properties':
                                                              {
                                                                'items':
                                                                  {
                                                                    'type': 'object',
                                                                    'additionalProperties': false,
                                                                    'required':
                                                                      ['data'],
                                                                    'properties':
                                                                      {
                                                                        'data':
                                                                          {
                                                                            'type': 'array',
                                                                            'items':
                                                                              {
                                                                                'type': 'object',
                                                                                'additionalProperties': false,
                                                                                'required':
                                                                                  [
                                                                                    'id',
                                                                                    'type',
                                                                                  ],
                                                                                'properties':
                                                                                  {
                                                                                    'id':
                                                                                      {
                                                                                        'type': 'string',
                                                                                      },
                                                                                    'type':
                                                                                      {
                                                                                        'type': 'string',
                                                                                      },
                                                                                  },
                                                                              },
                                                                          },
                                                                      },
                                                                  },
                                                              },
                                                          },
                                                      },
                                                  },
                                                ],
                                            },
                                        },
                                      'included':
                                        {
                                          'type': 'array',
                                          'items':
                                            {
                                              'oneOf':
                                                [
                                                  {
                                                    '$ref': '#/components/schemas/JSONAPI_OrderingBasicItemResponse',
                                                  },
                                                  {
                                                    '$ref': '#/components/schemas/JSONAPI_OrderingBooleanExciseItemResponse',
                                                  },
                                                  {
                                                    '$ref': '#/components/schemas/JSONAPI_OrderingEnumExciseItemResponse',
                                                  },
                                                ],
                                            },
                                        },
                                      'meta':
                                        {
                                          'type': 'object',
                                          'allOf':
                                            [
                                              {
                                                '$ref': '#/components/schemas/IndexMetaResponse',
                                              },
                                              {
                                                '$ref': '#/components/schemas/ExciseTypeMetaResponse',
                                              },
                                            ],
                                        },
                                    },
                                },
                            },
                        },
                    },
                },
            },
          'post':
            {
              'operationId': 'createBilling',
              'summary': '請求書の作成',
              'security': [{ 'iv_auth': ['write'] }],
              'parameters':
                [
                  {
                    'name': 'excise_type',
                    'in': 'query',
                    'description': "消費税項目のデータ型<br />\nboolean を指定した場合は、 BooleanExciseRequest, BooleanExciseResponse になり、<br />\nenum を指定した場合は、 EnumExciseRequest, EnumExciseResponse になります\nまた、この項目を指定した場合、消費税項目名が excise になります。\n",
                    'schema':
                      {
                        'type': 'string',
                        'enum': ['boolean', 'enum'],
                        'default': 'boolean',
                      },
                  },
                ],
              'requestBody':
                {
                  'required': true,
                  'content':
                    {
                      'application/json':
                        {
                          'schema':
                            {
                              'type': 'object',
                              'required': ['billing'],
                              'additionalProperties': false,
                              'properties':
                                {
                                  'billing':
                                    {
                                      'type': 'object',
                                      'allOf':
                                        [
                                          {
                                            '$ref': '#/components/schemas/CreateBillingRequest',
                                          },
                                          {
                                            'type': 'object',
                                            'required': ['department_id'],
                                          },
                                        ],
                                    },
                                },
                            },
                        },
                    },
                },
              'responses':
                {
                  '400':
                    {
                      'description': 'Bad request',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '401':
                    {
                      'description': 'Unauthorized',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '402':
                    {
                      'description': 'Payment required',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '403':
                    {
                      'description': 'Forbidden',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '404':
                    {
                      'description': 'No resource found',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '406':
                    {
                      'description': 'Not acceptable',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '408':
                    {
                      'description': 'Request Timeout',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '422':
                    {
                      'description': 'Unprocessable entity',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '429':
                    {
                      'description': 'Exceed call limit',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '500':
                    {
                      'description': 'Internal server error',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '201':
                    {
                      'description': '成功',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  'type': 'object',
                                  'required': ['data', 'included'],
                                  'properties':
                                    {
                                      'data':
                                        {
                                          'type': 'object',
                                          'allOf':
                                            [
                                              {
                                                '$ref': '#/components/schemas/JSONAPI_BillingResponse',
                                              },
                                              {
                                                'type': 'object',
                                                'additionalProperties': false,
                                                'properties':
                                                  {
                                                    'relationships':
                                                      {
                                                        'type': 'object',
                                                        'additionalProperties': false,
                                                        'properties':
                                                          {
                                                            'items':
                                                              {
                                                                'type': 'object',
                                                                'additionalProperties': false,
                                                                'required':
                                                                  ['data'],
                                                                'properties':
                                                                  {
                                                                    'data':
                                                                      {
                                                                        'type': 'array',
                                                                        'items':
                                                                          {
                                                                            'type': 'object',
                                                                            'additionalProperties': false,
                                                                            'required':
                                                                              [
                                                                                'id',
                                                                                'type',
                                                                              ],
                                                                            'properties':
                                                                              {
                                                                                'id':
                                                                                  {
                                                                                    'type': 'string',
                                                                                  },
                                                                                'type':
                                                                                  {
                                                                                    'type': 'string',
                                                                                  },
                                                                              },
                                                                          },
                                                                      },
                                                                  },
                                                              },
                                                          },
                                                      },
                                                  },
                                              },
                                            ],
                                        },
                                      'included':
                                        {
                                          'type': 'array',
                                          'items':
                                            {
                                              'oneOf':
                                                [
                                                  {
                                                    '$ref': '#/components/schemas/JSONAPI_OrderingBasicItemResponse',
                                                  },
                                                  {
                                                    '$ref': '#/components/schemas/JSONAPI_OrderingBooleanExciseItemResponse',
                                                  },
                                                  {
                                                    '$ref': '#/components/schemas/JSONAPI_OrderingEnumExciseItemResponse',
                                                  },
                                                ],
                                            },
                                        },
                                      'meta':
                                        {
                                          '$ref': '#/components/schemas/ExciseTypeMetaResponse',
                                        },
                                    },
                                },
                            },
                        },
                    },
                },
            },
        },
      '/api/v2/billings/{id}':
        {
          'get':
            {
              'operationId': 'getBilling',
              'summary': '請求書の取得',
              'security': [{ 'iv_auth': ['read', 'write'] }],
              'parameters':
                [
                  {
                    'name': 'excise_type',
                    'in': 'query',
                    'description': "消費税項目のデータ型<br />\nboolean を指定した場合は、 BooleanExciseRequest, BooleanExciseResponse になり、<br />\nenum を指定した場合は、 EnumExciseRequest, EnumExciseResponse になります\nまた、この項目を指定した場合、消費税項目名が excise になります。\n",
                    'schema':
                      {
                        'type': 'string',
                        'enum': ['boolean', 'enum'],
                        'default': 'boolean',
                      },
                  },
                  {
                    'name': 'id',
                    'in': 'path',
                    'required': true,
                    'schema': { 'type': 'string' },
                  },
                ],
              'responses':
                {
                  '400':
                    {
                      'description': 'Bad request',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '401':
                    {
                      'description': 'Unauthorized',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '402':
                    {
                      'description': 'Payment required',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '403':
                    {
                      'description': 'Forbidden',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '404':
                    {
                      'description': 'No resource found',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '406':
                    {
                      'description': 'Not acceptable',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '408':
                    {
                      'description': 'Request Timeout',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '422':
                    {
                      'description': 'Unprocessable entity',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '429':
                    {
                      'description': 'Exceed call limit',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '500':
                    {
                      'description': 'Internal server error',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '200':
                    {
                      'description': '請求書',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  'type': 'object',
                                  'required': ['data', 'included'],
                                  'properties':
                                    {
                                      'data':
                                        {
                                          'type': 'object',
                                          'allOf':
                                            [
                                              {
                                                '$ref': '#/components/schemas/JSONAPI_BillingResponse',
                                              },
                                              {
                                                'type': 'object',
                                                'additionalProperties': false,
                                                'properties':
                                                  {
                                                    'relationships':
                                                      {
                                                        'type': 'object',
                                                        'additionalProperties': false,
                                                        'properties':
                                                          {
                                                            'items':
                                                              {
                                                                'type': 'object',
                                                                'additionalProperties': false,
                                                                'required':
                                                                  ['data'],
                                                                'properties':
                                                                  {
                                                                    'data':
                                                                      {
                                                                        'type': 'array',
                                                                        'items':
                                                                          {
                                                                            'type': 'object',
                                                                            'additionalProperties': false,
                                                                            'required':
                                                                              [
                                                                                'id',
                                                                                'type',
                                                                              ],
                                                                            'properties':
                                                                              {
                                                                                'id':
                                                                                  {
                                                                                    'type': 'string',
                                                                                  },
                                                                                'type':
                                                                                  {
                                                                                    'type': 'string',
                                                                                  },
                                                                              },
                                                                          },
                                                                      },
                                                                  },
                                                              },
                                                          },
                                                      },
                                                  },
                                              },
                                            ],
                                        },
                                      'included':
                                        {
                                          'type': 'array',
                                          'items':
                                            {
                                              'oneOf':
                                                [
                                                  {
                                                    '$ref': '#/components/schemas/JSONAPI_OrderingBasicItemResponse',
                                                  },
                                                  {
                                                    '$ref': '#/components/schemas/JSONAPI_OrderingBooleanExciseItemResponse',
                                                  },
                                                  {
                                                    '$ref': '#/components/schemas/JSONAPI_OrderingEnumExciseItemResponse',
                                                  },
                                                ],
                                            },
                                        },
                                      'meta':
                                        {
                                          '$ref': '#/components/schemas/ExciseTypeMetaResponse',
                                        },
                                    },
                                },
                            },
                        },
                    },
                },
            },
          'patch':
            {
              'operationId': 'updateBilling',
              'summary': '請求書の更新',
              'security': [{ 'iv_auth': ['write'] }],
              'parameters':
                [
                  {
                    'name': 'excise_type',
                    'in': 'query',
                    'description': "消費税項目のデータ型<br />\nboolean を指定した場合は、 BooleanExciseRequest, BooleanExciseResponse になり、<br />\nenum を指定した場合は、 EnumExciseRequest, EnumExciseResponse になります\nまた、この項目を指定した場合、消費税項目名が excise になります。\n",
                    'schema':
                      {
                        'type': 'string',
                        'enum': ['boolean', 'enum'],
                        'default': 'boolean',
                      },
                  },
                  {
                    'name': 'id',
                    'in': 'path',
                    'required': true,
                    'schema': { 'type': 'string' },
                  },
                ],
              'requestBody':
                {
                  'required': true,
                  'content':
                    {
                      'application/json':
                        {
                          'schema':
                            {
                              'type': 'object',
                              'required': ['billing'],
                              'additionalProperties': false,
                              'properties':
                                {
                                  'billing':
                                    {
                                      '$ref': '#/components/schemas/UpdateBillingRequest',
                                    },
                                },
                            },
                        },
                    },
                },
              'responses':
                {
                  '400':
                    {
                      'description': 'Bad request',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '401':
                    {
                      'description': 'Unauthorized',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '402':
                    {
                      'description': 'Payment required',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '403':
                    {
                      'description': 'Forbidden',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '404':
                    {
                      'description': 'No resource found',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '406':
                    {
                      'description': 'Not acceptable',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '408':
                    {
                      'description': 'Request Timeout',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '422':
                    {
                      'description': 'Unprocessable entity',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '429':
                    {
                      'description': 'Exceed call limit',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '500':
                    {
                      'description': 'Internal server error',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '200':
                    {
                      'description': '成功',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  'type': 'object',
                                  'required': ['data', 'included'],
                                  'properties':
                                    {
                                      'data':
                                        {
                                          'type': 'object',
                                          'allOf':
                                            [
                                              {
                                                '$ref': '#/components/schemas/JSONAPI_BillingResponse',
                                              },
                                              {
                                                'type': 'object',
                                                'additionalProperties': false,
                                                'properties':
                                                  {
                                                    'relationships':
                                                      {
                                                        'type': 'object',
                                                        'additionalProperties': false,
                                                        'properties':
                                                          {
                                                            'items':
                                                              {
                                                                'type': 'object',
                                                                'additionalProperties': false,
                                                                'required':
                                                                  ['data'],
                                                                'properties':
                                                                  {
                                                                    'data':
                                                                      {
                                                                        'type': 'array',
                                                                        'items':
                                                                          {
                                                                            'type': 'object',
                                                                            'additionalProperties': false,
                                                                            'required':
                                                                              [
                                                                                'id',
                                                                                'type',
                                                                              ],
                                                                            'properties':
                                                                              {
                                                                                'id':
                                                                                  {
                                                                                    'type': 'string',
                                                                                  },
                                                                                'type':
                                                                                  {
                                                                                    'type': 'string',
                                                                                  },
                                                                              },
                                                                          },
                                                                      },
                                                                  },
                                                              },
                                                          },
                                                      },
                                                  },
                                              },
                                            ],
                                        },
                                      'included':
                                        {
                                          'type': 'array',
                                          'items':
                                            {
                                              'oneOf':
                                                [
                                                  {
                                                    '$ref': '#/components/schemas/JSONAPI_OrderingBasicItemResponse',
                                                  },
                                                  {
                                                    '$ref': '#/components/schemas/JSONAPI_OrderingBooleanExciseItemResponse',
                                                  },
                                                  {
                                                    '$ref': '#/components/schemas/JSONAPI_OrderingEnumExciseItemResponse',
                                                  },
                                                ],
                                            },
                                        },
                                      'meta':
                                        {
                                          '$ref': '#/components/schemas/ExciseTypeMetaResponse',
                                        },
                                    },
                                },
                            },
                        },
                    },
                },
            },
          'delete':
            {
              'operationId': 'deleteBilling',
              'summary': '請求書の削除',
              'security': [{ 'iv_auth': ['write'] }],
              'parameters':
                [
                  {
                    'name': 'id',
                    'in': 'path',
                    'required': true,
                    'schema': { 'type': 'string' },
                  },
                ],
              'responses':
                {
                  '400':
                    {
                      'description': 'Bad request',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '401':
                    {
                      'description': 'Unauthorized',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '402':
                    {
                      'description': 'Payment required',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '403':
                    {
                      'description': 'Forbidden',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '404':
                    {
                      'description': 'No resource found',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '406':
                    {
                      'description': 'Not acceptable',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '408':
                    {
                      'description': 'Request Timeout',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '422':
                    {
                      'description': 'Unprocessable entity',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '429':
                    {
                      'description': 'Exceed call limit',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '500':
                    {
                      'description': 'Internal server error',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '204': { 'description': '成功' },
                },
            },
        },
      '/api/v2/billings/search':
        {
          'get':
            {
              'operationId': 'searchBilling',
              'summary': '請求書の検索',
              'security': [{ 'iv_auth': ['read', 'write'] }],
              'parameters':
                [
                  {
                    'name': 'page',
                    'in': 'query',
                    'description': 'ページ番号',
                    'schema': { 'type': 'integer', 'minimum': 1, 'default': 1 },
                  },
                  {
                    'name': 'per_page',
                    'in': 'query',
                    'description': '1ページあたりの表示数',
                    'schema':
                      {
                        'type': 'integer',
                        'minimum': 1,
                        'maximum': 100,
                        'default': 100,
                      },
                  },
                  {
                    'name': 'excise_type',
                    'in': 'query',
                    'description': "消費税項目のデータ型<br />\nboolean を指定した場合は、 BooleanExciseRequest, BooleanExciseResponse になり、<br />\nenum を指定した場合は、 EnumExciseRequest, EnumExciseResponse になります\nまた、この項目を指定した場合、消費税項目名が excise になります。\n",
                    'schema':
                      {
                        'type': 'string',
                        'enum': ['boolean', 'enum'],
                        'default': 'boolean',
                      },
                  },
                  {
                    'name': 'q',
                    'in': 'query',
                    'description': '検索文字列。取引先(完全一致)、ステータス、件名etc',
                    'schema': { 'type': 'string' },
                  },
                  {
                    'name': 'range_key',
                    'in': 'query',
                    'description': '期間絞込対象',
                    'schema':
                      {
                        'type': 'string',
                        'enum': ['created_at', 'sales_date', 'billing_date'],
                        'default': 'created_at',
                      },
                  },
                  {
                    'name': 'from',
                    'in': 'query',
                    'description': '期間開始日',
                    'schema':
                      {
                        'type': 'string',
                        'format': 'date',
                        'default': '2022-11-01',
                      },
                  },
                  {
                    'name': 'to',
                    'in': 'query',
                    'description': '期間終了日',
                    'schema':
                      {
                        'type': 'string',
                        'format': 'date',
                        'default': '2022-11-30',
                      },
                  },
                ],
              'responses':
                {
                  '400':
                    {
                      'description': 'Bad request',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '401':
                    {
                      'description': 'Unauthorized',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '402':
                    {
                      'description': 'Payment required',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '403':
                    {
                      'description': 'Forbidden',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '404':
                    {
                      'description': 'No resource found',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '406':
                    {
                      'description': 'Not acceptable',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '408':
                    {
                      'description': 'Request Timeout',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '422':
                    {
                      'description': 'Unprocessable entity',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '429':
                    {
                      'description': 'Exceed call limit',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '500':
                    {
                      'description': 'Internal server error',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '200':
                    {
                      'description': '請求書一覧',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  'type': 'object',
                                  'required': ['data', 'meta', 'included'],
                                  'properties':
                                    {
                                      'data':
                                        {
                                          'type': 'array',
                                          'items':
                                            {
                                              'allOf':
                                                [
                                                  {
                                                    '$ref': '#/components/schemas/JSONAPI_BillingResponse',
                                                  },
                                                  {
                                                    'type': 'object',
                                                    'additionalProperties': false,
                                                    'properties':
                                                      {
                                                        'relationships':
                                                          {
                                                            'type': 'object',
                                                            'additionalProperties': false,
                                                            'properties':
                                                              {
                                                                'items':
                                                                  {
                                                                    'type': 'object',
                                                                    'additionalProperties': false,
                                                                    'required':
                                                                      ['data'],
                                                                    'properties':
                                                                      {
                                                                        'data':
                                                                          {
                                                                            'type': 'array',
                                                                            'items':
                                                                              {
                                                                                'type': 'object',
                                                                                'additionalProperties': false,
                                                                                'required':
                                                                                  [
                                                                                    'id',
                                                                                    'type',
                                                                                  ],
                                                                                'properties':
                                                                                  {
                                                                                    'id':
                                                                                      {
                                                                                        'type': 'string',
                                                                                      },
                                                                                    'type':
                                                                                      {
                                                                                        'type': 'string',
                                                                                      },
                                                                                  },
                                                                              },
                                                                          },
                                                                      },
                                                                  },
                                                              },
                                                          },
                                                      },
                                                  },
                                                ],
                                            },
                                        },
                                      'included':
                                        {
                                          'type': 'array',
                                          'items':
                                            {
                                              'oneOf':
                                                [
                                                  {
                                                    '$ref': '#/components/schemas/JSONAPI_OrderingBasicItemResponse',
                                                  },
                                                  {
                                                    '$ref': '#/components/schemas/JSONAPI_OrderingBooleanExciseItemResponse',
                                                  },
                                                  {
                                                    '$ref': '#/components/schemas/JSONAPI_OrderingEnumExciseItemResponse',
                                                  },
                                                ],
                                            },
                                        },
                                      'meta':
                                        {
                                          'type': 'object',
                                          'allOf':
                                            [
                                              {
                                                '$ref': '#/components/schemas/IndexMetaResponse',
                                              },
                                              {
                                                '$ref': '#/components/schemas/ExciseTypeMetaResponse',
                                              },
                                              {
                                                'type': 'object',
                                                'additionalProperties': false,
                                                'properties':
                                                  {
                                                    'query':
                                                      {
                                                        'type': 'string',
                                                        'nullable': true,
                                                      },
                                                    'range_key':
                                                      {
                                                        'type': 'string',
                                                        'enum':
                                                          [
                                                            'created_at',
                                                            'sales_date',
                                                            'billing_date',
                                                          ],
                                                      },
                                                    'from':
                                                      {
                                                        'type': 'string',
                                                        'format': 'date',
                                                      },
                                                    'to':
                                                      {
                                                        'type': 'string',
                                                        'format': 'date',
                                                      },
                                                  },
                                              },
                                            ],
                                        },
                                    },
                                },
                            },
                        },
                    },
                },
            },
        },
      '/api/v2/billings/{id}/posting':
        {
          'post':
            {
              'operationId': 'requestBillingPosting',
              'summary': '請求書の郵送依頼',
              'security': [{ 'iv_auth': ['write'] }],
              'parameters':
                [
                  {
                    'name': 'id',
                    'in': 'path',
                    'required': true,
                    'schema': { 'type': 'string' },
                  },
                ],
              'responses':
                {
                  '400':
                    {
                      'description': 'Bad request',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '401':
                    {
                      'description': 'Unauthorized',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '402':
                    {
                      'description': 'Payment required',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '403':
                    {
                      'description': 'Forbidden',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '404':
                    {
                      'description': 'No resource found',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '406':
                    {
                      'description': 'Not acceptable',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '408':
                    {
                      'description': 'Request Timeout',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '422':
                    {
                      'description': 'Unprocessable entity',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '429':
                    {
                      'description': 'Exceed call limit',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '500':
                    {
                      'description': 'Internal server error',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '204': { 'description': '成功' },
                },
            },
          'delete':
            {
              'operationId': 'cancelBillingPosting',
              'summary': '請求書の郵送キャンセル',
              'security': [{ 'iv_auth': ['write'] }],
              'parameters':
                [
                  {
                    'name': 'id',
                    'in': 'path',
                    'required': true,
                    'schema': { 'type': 'string' },
                  },
                ],
              'responses':
                {
                  '400':
                    {
                      'description': 'Bad request',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '401':
                    {
                      'description': 'Unauthorized',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '402':
                    {
                      'description': 'Payment required',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '403':
                    {
                      'description': 'Forbidden',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '404':
                    {
                      'description': 'No resource found',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '406':
                    {
                      'description': 'Not acceptable',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '408':
                    {
                      'description': 'Request Timeout',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '422':
                    {
                      'description': 'Unprocessable entity',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '429':
                    {
                      'description': 'Exceed call limit',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '500':
                    {
                      'description': 'Internal server error',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '204': { 'description': '成功' },
                },
            },
        },
      '/api/v2/billings/{billing_id}/payment_status':
        {
          'patch':
            {
              'operationId': 'updateBillingStatus',
              'summary': '請求書の入金ステータス変更',
              'security': [{ 'iv_auth': ['write'] }],
              'parameters':
                [
                  {
                    'name': 'excise_type',
                    'in': 'query',
                    'description': "消費税項目のデータ型<br />\nboolean を指定した場合は、 BooleanExciseRequest, BooleanExciseResponse になり、<br />\nenum を指定した場合は、 EnumExciseRequest, EnumExciseResponse になります\nまた、この項目を指定した場合、消費税項目名が excise になります。\n",
                    'schema':
                      {
                        'type': 'string',
                        'enum': ['boolean', 'enum'],
                        'default': 'boolean',
                      },
                  },
                  {
                    'name': 'billing_id',
                    'in': 'path',
                    'required': true,
                    'schema': { 'type': 'string' },
                  },
                ],
              'requestBody':
                {
                  'required': true,
                  'content':
                    {
                      'application/json':
                        {
                          'schema':
                            {
                              'type': 'object',
                              'required': ['billing'],
                              'additionalProperties': false,
                              'properties':
                                {
                                  'billing':
                                    {
                                      'type': 'object',
                                      'additionalProperties': false,
                                      'required': ['payment_status'],
                                      'properties':
                                        {
                                          'payment_status':
                                            {
                                              'type': 'string',
                                              'enum': ['0', '1', '2'],
                                              'description': '0: 未設定<br />1: 未入金<br />2: 入金済み',
                                            },
                                        },
                                    },
                                },
                            },
                        },
                    },
                },
              'responses':
                {
                  '400':
                    {
                      'description': 'Bad request',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '401':
                    {
                      'description': 'Unauthorized',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '402':
                    {
                      'description': 'Payment required',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '403':
                    {
                      'description': 'Forbidden',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '404':
                    {
                      'description': 'No resource found',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '406':
                    {
                      'description': 'Not acceptable',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '408':
                    {
                      'description': 'Request Timeout',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '422':
                    {
                      'description': 'Unprocessable entity',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '429':
                    {
                      'description': 'Exceed call limit',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '500':
                    {
                      'description': 'Internal server error',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '200':
                    {
                      'description': '成功',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  'type': 'object',
                                  'required': ['data', 'included'],
                                  'properties':
                                    {
                                      'data':
                                        {
                                          'type': 'object',
                                          'allOf':
                                            [
                                              {
                                                '$ref': '#/components/schemas/JSONAPI_BillingResponse',
                                              },
                                              {
                                                'type': 'object',
                                                'additionalProperties': false,
                                                'properties':
                                                  {
                                                    'relationships':
                                                      {
                                                        'type': 'object',
                                                        'additionalProperties': false,
                                                        'properties':
                                                          {
                                                            'items':
                                                              {
                                                                'type': 'object',
                                                                'additionalProperties': false,
                                                                'required':
                                                                  ['data'],
                                                                'properties':
                                                                  {
                                                                    'data':
                                                                      {
                                                                        'type': 'array',
                                                                        'items':
                                                                          {
                                                                            'type': 'object',
                                                                            'additionalProperties': false,
                                                                            'required':
                                                                              [
                                                                                'id',
                                                                                'type',
                                                                              ],
                                                                            'properties':
                                                                              {
                                                                                'id':
                                                                                  {
                                                                                    'type': 'string',
                                                                                  },
                                                                                'type':
                                                                                  {
                                                                                    'type': 'string',
                                                                                  },
                                                                              },
                                                                          },
                                                                      },
                                                                  },
                                                              },
                                                          },
                                                      },
                                                  },
                                              },
                                            ],
                                        },
                                      'included':
                                        {
                                          'type': 'array',
                                          'items':
                                            {
                                              'oneOf':
                                                [
                                                  {
                                                    '$ref': '#/components/schemas/JSONAPI_OrderingBasicItemResponse',
                                                  },
                                                  {
                                                    '$ref': '#/components/schemas/JSONAPI_OrderingBooleanExciseItemResponse',
                                                  },
                                                  {
                                                    '$ref': '#/components/schemas/JSONAPI_OrderingEnumExciseItemResponse',
                                                  },
                                                ],
                                            },
                                        },
                                      'meta':
                                        {
                                          '$ref': '#/components/schemas/ExciseTypeMetaResponse',
                                        },
                                    },
                                },
                            },
                        },
                    },
                },
            },
        },
      '/api/v2/quotes':
        {
          'get':
            {
              'operationId': 'getQuotes',
              'summary': '見積書一覧の取得',
              'security': [{ 'iv_auth': ['read', 'write'] }],
              'parameters':
                [
                  {
                    'name': 'page',
                    'in': 'query',
                    'description': 'ページ番号',
                    'schema': { 'type': 'integer', 'minimum': 1, 'default': 1 },
                  },
                  {
                    'name': 'per_page',
                    'in': 'query',
                    'description': '1ページあたりの表示数',
                    'schema':
                      {
                        'type': 'integer',
                        'minimum': 1,
                        'maximum': 100,
                        'default': 100,
                      },
                  },
                  {
                    'name': 'excise_type',
                    'in': 'query',
                    'description': "消費税項目のデータ型<br />\nboolean を指定した場合は、 BooleanExciseRequest, BooleanExciseResponse になり、<br />\nenum を指定した場合は、 EnumExciseRequest, EnumExciseResponse になります\nまた、この項目を指定した場合、消費税項目名が excise になります。\n",
                    'schema':
                      {
                        'type': 'string',
                        'enum': ['boolean', 'enum'],
                        'default': 'boolean',
                      },
                  },
                ],
              'responses':
                {
                  '400':
                    {
                      'description': 'Bad request',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/ErrorResponse',
                                },
                            },
                        },
                    },
                  '401':
                    {
                      'description': 'Unauthorized',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/ErrorResponse',
                                },
                            },
                        },
                    },
                  '403':
                    {
                      'description': 'Forbidden',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/ErrorResponse',
                                },
                            },
                        },
                    },
                  '404':
                    {
                      'description': 'No resource found',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/ErrorResponse',
                                },
                            },
                        },
                    },
                  '422':
                    {
                      'description': 'Unprocessable entity',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/ErrorResponse',
                                },
                            },
                        },
                    },
                  '500':
                    {
                      'description': 'Internal server error',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/ErrorResponse',
                                },
                            },
                        },
                    },
                  '200':
                    {
                      'description': '見積書一覧',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  'type': 'object',
                                  'required': ['data', 'meta', 'included'],
                                  'properties':
                                    {
                                      'data':
                                        {
                                          'type': 'array',
                                          'items':
                                            {
                                              'allOf':
                                                [
                                                  {
                                                    '$ref': '#/components/schemas/JSONAPI_QuoteResponse',
                                                  },
                                                  {
                                                    'type': 'object',
                                                    'additionalProperties': false,
                                                    'properties':
                                                      {
                                                        'relationships':
                                                          {
                                                            'type': 'object',
                                                            'additionalProperties': false,
                                                            'properties':
                                                              {
                                                                'items':
                                                                  {
                                                                    'type': 'object',
                                                                    'additionalProperties': false,
                                                                    'required':
                                                                      ['data'],
                                                                    'properties':
                                                                      {
                                                                        'data':
                                                                          {
                                                                            'type': 'array',
                                                                            'items':
                                                                              {
                                                                                'type': 'object',
                                                                                'additionalProperties': false,
                                                                                'required':
                                                                                  [
                                                                                    'id',
                                                                                    'type',
                                                                                  ],
                                                                                'properties':
                                                                                  {
                                                                                    'id':
                                                                                      {
                                                                                        'type': 'string',
                                                                                      },
                                                                                    'type':
                                                                                      {
                                                                                        'type': 'string',
                                                                                      },
                                                                                  },
                                                                              },
                                                                          },
                                                                      },
                                                                  },
                                                              },
                                                          },
                                                      },
                                                  },
                                                ],
                                            },
                                        },
                                      'included':
                                        {
                                          'type': 'array',
                                          'items':
                                            {
                                              'oneOf':
                                                [
                                                  {
                                                    '$ref': '#/components/schemas/JSONAPI_OrderingBasicItemResponse',
                                                  },
                                                  {
                                                    '$ref': '#/components/schemas/JSONAPI_OrderingBooleanExciseItemResponse',
                                                  },
                                                  {
                                                    '$ref': '#/components/schemas/JSONAPI_OrderingEnumExciseItemResponse',
                                                  },
                                                ],
                                            },
                                        },
                                      'meta':
                                        {
                                          'type': 'object',
                                          'allOf':
                                            [
                                              {
                                                '$ref': '#/components/schemas/IndexMetaResponse',
                                              },
                                              {
                                                '$ref': '#/components/schemas/ExciseTypeMetaResponse',
                                              },
                                            ],
                                        },
                                    },
                                },
                            },
                        },
                    },
                },
            },
          'post':
            {
              'operationId': 'createQuote',
              'summary': '見積書の作成',
              'security': [{ 'iv_auth': ['write'] }],
              'parameters':
                [
                  {
                    'name': 'excise_type',
                    'in': 'query',
                    'description': "消費税項目のデータ型<br />\nboolean を指定した場合は、 BooleanExciseRequest, BooleanExciseResponse になり、<br />\nenum を指定した場合は、 EnumExciseRequest, EnumExciseResponse になります\nまた、この項目を指定した場合、消費税項目名が excise になります。\n",
                    'schema':
                      {
                        'type': 'string',
                        'enum': ['boolean', 'enum'],
                        'default': 'boolean',
                      },
                  },
                ],
              'requestBody':
                {
                  'required': true,
                  'content':
                    {
                      'application/json':
                        {
                          'schema':
                            {
                              'type': 'object',
                              'required': ['quote'],
                              'additionalProperties': false,
                              'properties':
                                {
                                  'quote':
                                    {
                                      'type': 'object',
                                      'allOf':
                                        [
                                          {
                                            '$ref': '#/components/schemas/CreateQuoteRequest',
                                          },
                                          {
                                            'type': 'object',
                                            'required': ['department_id'],
                                          },
                                        ],
                                    },
                                },
                            },
                        },
                    },
                },
              'responses':
                {
                  '400':
                    {
                      'description': 'Bad request',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/ErrorResponse',
                                },
                            },
                        },
                    },
                  '401':
                    {
                      'description': 'Unauthorized',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/ErrorResponse',
                                },
                            },
                        },
                    },
                  '403':
                    {
                      'description': 'Forbidden',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/ErrorResponse',
                                },
                            },
                        },
                    },
                  '404':
                    {
                      'description': 'No resource found',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/ErrorResponse',
                                },
                            },
                        },
                    },
                  '422':
                    {
                      'description': 'Unprocessable entity',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/ErrorResponse',
                                },
                            },
                        },
                    },
                  '500':
                    {
                      'description': 'Internal server error',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/ErrorResponse',
                                },
                            },
                        },
                    },
                  '200':
                    {
                      'description': '成功',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  'type': 'object',
                                  'required': ['data', 'included'],
                                  'properties':
                                    {
                                      'data':
                                        {
                                          'type': 'object',
                                          'allOf':
                                            [
                                              {
                                                '$ref': '#/components/schemas/JSONAPI_QuoteResponse',
                                              },
                                              {
                                                'type': 'object',
                                                'additionalProperties': false,
                                                'properties':
                                                  {
                                                    'relationships':
                                                      {
                                                        'type': 'object',
                                                        'additionalProperties': false,
                                                        'properties':
                                                          {
                                                            'items':
                                                              {
                                                                'type': 'object',
                                                                'additionalProperties': false,
                                                                'required':
                                                                  ['data'],
                                                                'properties':
                                                                  {
                                                                    'data':
                                                                      {
                                                                        'type': 'array',
                                                                        'items':
                                                                          {
                                                                            'type': 'object',
                                                                            'additionalProperties': false,
                                                                            'required':
                                                                              [
                                                                                'id',
                                                                                'type',
                                                                              ],
                                                                            'properties':
                                                                              {
                                                                                'id':
                                                                                  {
                                                                                    'type': 'string',
                                                                                  },
                                                                                'type':
                                                                                  {
                                                                                    'type': 'string',
                                                                                  },
                                                                              },
                                                                          },
                                                                      },
                                                                  },
                                                              },
                                                          },
                                                      },
                                                  },
                                              },
                                            ],
                                        },
                                      'included':
                                        {
                                          'type': 'array',
                                          'items':
                                            {
                                              'oneOf':
                                                [
                                                  {
                                                    '$ref': '#/components/schemas/JSONAPI_OrderingBasicItemResponse',
                                                  },
                                                  {
                                                    '$ref': '#/components/schemas/JSONAPI_OrderingBooleanExciseItemResponse',
                                                  },
                                                  {
                                                    '$ref': '#/components/schemas/JSONAPI_OrderingEnumExciseItemResponse',
                                                  },
                                                ],
                                            },
                                        },
                                      'meta':
                                        {
                                          '$ref': '#/components/schemas/ExciseTypeMetaResponse',
                                        },
                                    },
                                },
                            },
                        },
                    },
                },
            },
        },
      '/api/v2/quotes/{id}':
        {
          'get':
            {
              'operationId': 'getQuote',
              'summary': '見積書の取得',
              'security': [{ 'iv_auth': ['read', 'write'] }],
              'parameters':
                [
                  {
                    'name': 'excise_type',
                    'in': 'query',
                    'description': "消費税項目のデータ型<br />\nboolean を指定した場合は、 BooleanExciseRequest, BooleanExciseResponse になり、<br />\nenum を指定した場合は、 EnumExciseRequest, EnumExciseResponse になります\nまた、この項目を指定した場合、消費税項目名が excise になります。\n",
                    'schema':
                      {
                        'type': 'string',
                        'enum': ['boolean', 'enum'],
                        'default': 'boolean',
                      },
                  },
                  {
                    'name': 'id',
                    'in': 'path',
                    'required': true,
                    'schema': { 'type': 'string' },
                  },
                ],
              'responses':
                {
                  '400':
                    {
                      'description': 'Bad request',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/ErrorResponse',
                                },
                            },
                        },
                    },
                  '401':
                    {
                      'description': 'Unauthorized',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/ErrorResponse',
                                },
                            },
                        },
                    },
                  '403':
                    {
                      'description': 'Forbidden',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/ErrorResponse',
                                },
                            },
                        },
                    },
                  '404':
                    {
                      'description': 'No resource found',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/ErrorResponse',
                                },
                            },
                        },
                    },
                  '422':
                    {
                      'description': 'Unprocessable entity',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/ErrorResponse',
                                },
                            },
                        },
                    },
                  '500':
                    {
                      'description': 'Internal server error',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/ErrorResponse',
                                },
                            },
                        },
                    },
                  '200':
                    {
                      'description': '見積書',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  'type': 'object',
                                  'required': ['data', 'included'],
                                  'properties':
                                    {
                                      'data':
                                        {
                                          'type': 'object',
                                          'allOf':
                                            [
                                              {
                                                '$ref': '#/components/schemas/JSONAPI_QuoteResponse',
                                              },
                                              {
                                                'type': 'object',
                                                'additionalProperties': false,
                                                'properties':
                                                  {
                                                    'relationships':
                                                      {
                                                        'type': 'object',
                                                        'additionalProperties': false,
                                                        'properties':
                                                          {
                                                            'items':
                                                              {
                                                                'type': 'object',
                                                                'additionalProperties': false,
                                                                'required':
                                                                  ['data'],
                                                                'properties':
                                                                  {
                                                                    'data':
                                                                      {
                                                                        'type': 'array',
                                                                        'items':
                                                                          {
                                                                            'type': 'object',
                                                                            'additionalProperties': false,
                                                                            'required':
                                                                              [
                                                                                'id',
                                                                                'type',
                                                                              ],
                                                                            'properties':
                                                                              {
                                                                                'id':
                                                                                  {
                                                                                    'type': 'string',
                                                                                  },
                                                                                'type':
                                                                                  {
                                                                                    'type': 'string',
                                                                                  },
                                                                              },
                                                                          },
                                                                      },
                                                                  },
                                                              },
                                                          },
                                                      },
                                                  },
                                              },
                                            ],
                                        },
                                      'included':
                                        {
                                          'type': 'array',
                                          'items':
                                            {
                                              'oneOf':
                                                [
                                                  {
                                                    '$ref': '#/components/schemas/JSONAPI_OrderingBasicItemResponse',
                                                  },
                                                  {
                                                    '$ref': '#/components/schemas/JSONAPI_OrderingBooleanExciseItemResponse',
                                                  },
                                                  {
                                                    '$ref': '#/components/schemas/JSONAPI_OrderingEnumExciseItemResponse',
                                                  },
                                                ],
                                            },
                                        },
                                      'meta':
                                        {
                                          '$ref': '#/components/schemas/ExciseTypeMetaResponse',
                                        },
                                    },
                                },
                            },
                        },
                    },
                },
            },
          'patch':
            {
              'operationId': 'updateQuote',
              'summary': '見積書の更新',
              'security': [{ 'iv_auth': ['write'] }],
              'parameters':
                [
                  {
                    'name': 'excise_type',
                    'in': 'query',
                    'description': "消費税項目のデータ型<br />\nboolean を指定した場合は、 BooleanExciseRequest, BooleanExciseResponse になり、<br />\nenum を指定した場合は、 EnumExciseRequest, EnumExciseResponse になります\nまた、この項目を指定した場合、消費税項目名が excise になります。\n",
                    'schema':
                      {
                        'type': 'string',
                        'enum': ['boolean', 'enum'],
                        'default': 'boolean',
                      },
                  },
                  {
                    'name': 'id',
                    'in': 'path',
                    'required': true,
                    'schema': { 'type': 'string' },
                  },
                ],
              'requestBody':
                {
                  'required': true,
                  'content':
                    {
                      'application/json':
                        {
                          'schema':
                            {
                              'type': 'object',
                              'required': ['quote'],
                              'additionalProperties': false,
                              'properties':
                                {
                                  'quote':
                                    {
                                      '$ref': '#/components/schemas/UpdateQuoteRequest',
                                    },
                                },
                            },
                        },
                    },
                },
              'responses':
                {
                  '400':
                    {
                      'description': 'Bad request',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/ErrorResponse',
                                },
                            },
                        },
                    },
                  '401':
                    {
                      'description': 'Unauthorized',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/ErrorResponse',
                                },
                            },
                        },
                    },
                  '403':
                    {
                      'description': 'Forbidden',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/ErrorResponse',
                                },
                            },
                        },
                    },
                  '404':
                    {
                      'description': 'No resource found',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/ErrorResponse',
                                },
                            },
                        },
                    },
                  '422':
                    {
                      'description': 'Unprocessable entity',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/ErrorResponse',
                                },
                            },
                        },
                    },
                  '500':
                    {
                      'description': 'Internal server error',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/ErrorResponse',
                                },
                            },
                        },
                    },
                  '200':
                    {
                      'description': '成功',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  'type': 'object',
                                  'required': ['data', 'included'],
                                  'properties':
                                    {
                                      'data':
                                        {
                                          'type': 'object',
                                          'allOf':
                                            [
                                              {
                                                '$ref': '#/components/schemas/JSONAPI_QuoteResponse',
                                              },
                                              {
                                                'type': 'object',
                                                'additionalProperties': false,
                                                'properties':
                                                  {
                                                    'relationships':
                                                      {
                                                        'type': 'object',
                                                        'additionalProperties': false,
                                                        'properties':
                                                          {
                                                            'items':
                                                              {
                                                                'type': 'object',
                                                                'additionalProperties': false,
                                                                'required':
                                                                  ['data'],
                                                                'properties':
                                                                  {
                                                                    'data':
                                                                      {
                                                                        'type': 'array',
                                                                        'items':
                                                                          {
                                                                            'type': 'object',
                                                                            'additionalProperties': false,
                                                                            'required':
                                                                              [
                                                                                'id',
                                                                                'type',
                                                                              ],
                                                                            'properties':
                                                                              {
                                                                                'id':
                                                                                  {
                                                                                    'type': 'string',
                                                                                  },
                                                                                'type':
                                                                                  {
                                                                                    'type': 'string',
                                                                                  },
                                                                              },
                                                                          },
                                                                      },
                                                                  },
                                                              },
                                                          },
                                                      },
                                                  },
                                              },
                                            ],
                                        },
                                      'included':
                                        {
                                          'type': 'array',
                                          'items':
                                            {
                                              'oneOf':
                                                [
                                                  {
                                                    '$ref': '#/components/schemas/JSONAPI_OrderingBasicItemResponse',
                                                  },
                                                  {
                                                    '$ref': '#/components/schemas/JSONAPI_OrderingBooleanExciseItemResponse',
                                                  },
                                                  {
                                                    '$ref': '#/components/schemas/JSONAPI_OrderingEnumExciseItemResponse',
                                                  },
                                                ],
                                            },
                                        },
                                      'meta':
                                        {
                                          '$ref': '#/components/schemas/ExciseTypeMetaResponse',
                                        },
                                    },
                                },
                            },
                        },
                    },
                },
            },
          'delete':
            {
              'operationId': 'deleteQuote',
              'summary': '見積書の削除',
              'security': [{ 'iv_auth': ['write'] }],
              'parameters':
                [
                  {
                    'name': 'id',
                    'in': 'path',
                    'required': true,
                    'schema': { 'type': 'string' },
                  },
                ],
              'responses':
                {
                  '400':
                    {
                      'description': 'Bad request',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/ErrorResponse',
                                },
                            },
                        },
                    },
                  '401':
                    {
                      'description': 'Unauthorized',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/ErrorResponse',
                                },
                            },
                        },
                    },
                  '403':
                    {
                      'description': 'Forbidden',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/ErrorResponse',
                                },
                            },
                        },
                    },
                  '404':
                    {
                      'description': 'No resource found',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/ErrorResponse',
                                },
                            },
                        },
                    },
                  '422':
                    {
                      'description': 'Unprocessable entity',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/ErrorResponse',
                                },
                            },
                        },
                    },
                  '500':
                    {
                      'description': 'Internal server error',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/ErrorResponse',
                                },
                            },
                        },
                    },
                  '204': { 'description': '成功' },
                },
            },
        },
      '/api/v2/quotes/search':
        {
          'get':
            {
              'operationId': 'searchQuotes',
              'summary': '見積書一覧の検索',
              'security': [{ 'iv_auth': ['read', 'write'] }],
              'parameters':
                [
                  {
                    'name': 'q',
                    'in': 'query',
                    'description': '検索文字列。取引先(完全一致)、ステータス、件名etc',
                    'schema': { 'type': 'string' },
                  },
                  {
                    'name': 'range',
                    'in': 'query',
                    'schema':
                      {
                        'type': 'object',
                        'additionalProperties': false,
                        'properties':
                          {
                            'key':
                              {
                                'type': 'string',
                                'enum':
                                  ['created_at', 'quote_date', 'expired_date'],
                                'default': 'created_at',
                                'description': '期間絞込対象',
                              },
                            'from':
                              {
                                'type': 'string',
                                'format': 'date',
                                'default': '2022-11-01',
                                'description': '期間開始日',
                              },
                            'to':
                              {
                                'type': 'string',
                                'format': 'date',
                                'default': '2022-11-30',
                                'description': '期間終了日',
                              },
                          },
                      },
                  },
                  {
                    'name': 'page',
                    'in': 'query',
                    'description': 'ページ番号',
                    'schema': { 'type': 'integer', 'minimum': 1, 'default': 1 },
                  },
                  {
                    'name': 'per_page',
                    'in': 'query',
                    'description': '1ページあたりの表示数',
                    'schema':
                      {
                        'type': 'integer',
                        'minimum': 1,
                        'maximum': 100,
                        'default': 100,
                      },
                  },
                  {
                    'name': 'excise_type',
                    'in': 'query',
                    'description': "消費税項目のデータ型<br />\nboolean を指定した場合は、 BooleanExciseRequest, BooleanExciseResponse になり、<br />\nenum を指定した場合は、 EnumExciseRequest, EnumExciseResponse になります\nまた、この項目を指定した場合、消費税項目名が excise になります。\n",
                    'schema':
                      {
                        'type': 'string',
                        'enum': ['boolean', 'enum'],
                        'default': 'boolean',
                      },
                  },
                ],
              'responses':
                {
                  '400':
                    {
                      'description': 'Bad request',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/ErrorResponse',
                                },
                            },
                        },
                    },
                  '401':
                    {
                      'description': 'Unauthorized',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/ErrorResponse',
                                },
                            },
                        },
                    },
                  '403':
                    {
                      'description': 'Forbidden',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/ErrorResponse',
                                },
                            },
                        },
                    },
                  '404':
                    {
                      'description': 'No resource found',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/ErrorResponse',
                                },
                            },
                        },
                    },
                  '422':
                    {
                      'description': 'Unprocessable entity',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/ErrorResponse',
                                },
                            },
                        },
                    },
                  '500':
                    {
                      'description': 'Internal server error',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/ErrorResponse',
                                },
                            },
                        },
                    },
                  '200':
                    {
                      'description': '見積書一覧',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  'type': 'object',
                                  'required': ['data', 'meta', 'included'],
                                  'properties':
                                    {
                                      'data':
                                        {
                                          'type': 'array',
                                          'items':
                                            {
                                              'allOf':
                                                [
                                                  {
                                                    '$ref': '#/components/schemas/JSONAPI_QuoteResponse',
                                                  },
                                                  {
                                                    'type': 'object',
                                                    'additionalProperties': false,
                                                    'properties':
                                                      {
                                                        'relationships':
                                                          {
                                                            'type': 'object',
                                                            'additionalProperties': false,
                                                            'properties':
                                                              {
                                                                'items':
                                                                  {
                                                                    'type': 'object',
                                                                    'additionalProperties': false,
                                                                    'required':
                                                                      ['data'],
                                                                    'properties':
                                                                      {
                                                                        'data':
                                                                          {
                                                                            'type': 'array',
                                                                            'items':
                                                                              {
                                                                                'type': 'object',
                                                                                'additionalProperties': false,
                                                                                'required':
                                                                                  [
                                                                                    'id',
                                                                                    'type',
                                                                                  ],
                                                                                'properties':
                                                                                  {
                                                                                    'id':
                                                                                      {
                                                                                        'type': 'string',
                                                                                      },
                                                                                    'type':
                                                                                      {
                                                                                        'type': 'string',
                                                                                      },
                                                                                  },
                                                                              },
                                                                          },
                                                                      },
                                                                  },
                                                              },
                                                          },
                                                      },
                                                  },
                                                ],
                                            },
                                        },
                                      'included':
                                        {
                                          'type': 'array',
                                          'items':
                                            {
                                              'oneOf':
                                                [
                                                  {
                                                    '$ref': '#/components/schemas/JSONAPI_OrderingBasicItemResponse',
                                                  },
                                                  {
                                                    '$ref': '#/components/schemas/JSONAPI_OrderingBooleanExciseItemResponse',
                                                  },
                                                  {
                                                    '$ref': '#/components/schemas/JSONAPI_OrderingEnumExciseItemResponse',
                                                  },
                                                ],
                                            },
                                        },
                                      'meta':
                                        {
                                          'type': 'object',
                                          'allOf':
                                            [
                                              {
                                                '$ref': '#/components/schemas/IndexMetaResponse',
                                              },
                                              {
                                                '$ref': '#/components/schemas/ExciseTypeMetaResponse',
                                              },
                                            ],
                                        },
                                    },
                                },
                            },
                        },
                    },
                },
            },
        },
      '/api/v2/quotes/{quote_id}/posting':
        {
          'post':
            {
              'operationId': 'requestQuotePosting',
              'summary': '見積書の郵送依頼',
              'security': [{ 'iv_auth': ['write'] }],
              'parameters':
                [
                  {
                    'name': 'quote_id',
                    'in': 'path',
                    'required': true,
                    'schema': { 'type': 'string' },
                  },
                ],
              'responses':
                {
                  '400':
                    {
                      'description': 'Bad request',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/ErrorResponse',
                                },
                            },
                        },
                    },
                  '401':
                    {
                      'description': 'Unauthorized',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/ErrorResponse',
                                },
                            },
                        },
                    },
                  '403':
                    {
                      'description': 'Forbidden',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/ErrorResponse',
                                },
                            },
                        },
                    },
                  '404':
                    {
                      'description': 'No resource found',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/ErrorResponse',
                                },
                            },
                        },
                    },
                  '422':
                    {
                      'description': 'Unprocessable entity',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/ErrorResponse',
                                },
                            },
                        },
                    },
                  '500':
                    {
                      'description': 'Internal server error',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/ErrorResponse',
                                },
                            },
                        },
                    },
                  '204': { 'description': '成功' },
                },
            },
          'delete':
            {
              'operationId': 'cancelQuotePosting',
              'summary': '見積書の郵送キャンセル',
              'security': [{ 'iv_auth': ['write'] }],
              'parameters':
                [
                  {
                    'name': 'quote_id',
                    'in': 'path',
                    'required': true,
                    'schema': { 'type': 'string' },
                  },
                ],
              'responses':
                {
                  '400':
                    {
                      'description': 'Bad request',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/ErrorResponse',
                                },
                            },
                        },
                    },
                  '401':
                    {
                      'description': 'Unauthorized',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/ErrorResponse',
                                },
                            },
                        },
                    },
                  '403':
                    {
                      'description': 'Forbidden',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/ErrorResponse',
                                },
                            },
                        },
                    },
                  '404':
                    {
                      'description': 'No resource found',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/ErrorResponse',
                                },
                            },
                        },
                    },
                  '422':
                    {
                      'description': 'Unprocessable entity',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/ErrorResponse',
                                },
                            },
                        },
                    },
                  '500':
                    {
                      'description': 'Internal server error',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/ErrorResponse',
                                },
                            },
                        },
                    },
                  '204': { 'description': '成功' },
                },
            },
        },
      '/api/v2/quotes/{quote_id}/order_status':
        {
          'patch':
            {
              'operationId': 'updateQuoteStatus',
              'summary': '見積書のステータス変更',
              'security': [{ 'iv_auth': ['write'] }],
              'parameters':
                [
                  {
                    'name': 'excise_type',
                    'in': 'query',
                    'description': "消費税項目のデータ型<br />\nboolean を指定した場合は、 BooleanExciseRequest, BooleanExciseResponse になり、<br />\nenum を指定した場合は、 EnumExciseRequest, EnumExciseResponse になります\nまた、この項目を指定した場合、消費税項目名が excise になります。\n",
                    'schema':
                      {
                        'type': 'string',
                        'enum': ['boolean', 'enum'],
                        'default': 'boolean',
                      },
                  },
                  {
                    'name': 'quote_id',
                    'in': 'path',
                    'required': true,
                    'schema': { 'type': 'string' },
                  },
                ],
              'requestBody':
                {
                  'required': true,
                  'content':
                    {
                      'application/json':
                        {
                          'schema':
                            {
                              'type': 'object',
                              'required': ['quote'],
                              'additionalProperties': false,
                              'properties':
                                {
                                  'quote':
                                    {
                                      'type': 'object',
                                      'additionalProperties': false,
                                      'required': ['order_status'],
                                      'properties':
                                        {
                                          'order_status':
                                            {
                                              'type': 'string',
                                              'enum':
                                                [
                                                  'default',
                                                  'failure',
                                                  'not_received',
                                                  'received',
                                                ],
                                              'description': 'default: 未設定<br />failure: 失注<br />not_received: 未受注<br />received: 受注済み',
                                            },
                                        },
                                    },
                                },
                            },
                        },
                    },
                },
              'responses':
                {
                  '400':
                    {
                      'description': 'Bad request',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/ErrorResponse',
                                },
                            },
                        },
                    },
                  '401':
                    {
                      'description': 'Unauthorized',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/ErrorResponse',
                                },
                            },
                        },
                    },
                  '403':
                    {
                      'description': 'Forbidden',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/ErrorResponse',
                                },
                            },
                        },
                    },
                  '404':
                    {
                      'description': 'No resource found',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/ErrorResponse',
                                },
                            },
                        },
                    },
                  '422':
                    {
                      'description': 'Unprocessable entity',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/ErrorResponse',
                                },
                            },
                        },
                    },
                  '500':
                    {
                      'description': 'Internal server error',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/ErrorResponse',
                                },
                            },
                        },
                    },
                  '200':
                    {
                      'description': '成功',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  'type': 'object',
                                  'required': ['data', 'included'],
                                  'properties':
                                    {
                                      'data':
                                        {
                                          'type': 'object',
                                          'allOf':
                                            [
                                              {
                                                '$ref': '#/components/schemas/JSONAPI_QuoteResponse',
                                              },
                                              {
                                                'type': 'object',
                                                'additionalProperties': false,
                                                'properties':
                                                  {
                                                    'relationships':
                                                      {
                                                        'type': 'object',
                                                        'additionalProperties': false,
                                                        'properties':
                                                          {
                                                            'items':
                                                              {
                                                                'type': 'object',
                                                                'additionalProperties': false,
                                                                'required':
                                                                  ['data'],
                                                                'properties':
                                                                  {
                                                                    'data':
                                                                      {
                                                                        'type': 'array',
                                                                        'items':
                                                                          {
                                                                            'type': 'object',
                                                                            'additionalProperties': false,
                                                                            'required':
                                                                              [
                                                                                'id',
                                                                                'type',
                                                                              ],
                                                                            'properties':
                                                                              {
                                                                                'id':
                                                                                  {
                                                                                    'type': 'string',
                                                                                  },
                                                                                'type':
                                                                                  {
                                                                                    'type': 'string',
                                                                                  },
                                                                              },
                                                                          },
                                                                      },
                                                                  },
                                                              },
                                                          },
                                                      },
                                                  },
                                              },
                                            ],
                                        },
                                      'included':
                                        {
                                          'type': 'array',
                                          'items':
                                            {
                                              'oneOf':
                                                [
                                                  {
                                                    '$ref': '#/components/schemas/JSONAPI_OrderingBasicItemResponse',
                                                  },
                                                  {
                                                    '$ref': '#/components/schemas/JSONAPI_OrderingBooleanExciseItemResponse',
                                                  },
                                                  {
                                                    '$ref': '#/components/schemas/JSONAPI_OrderingEnumExciseItemResponse',
                                                  },
                                                ],
                                            },
                                        },
                                      'meta':
                                        {
                                          '$ref': '#/components/schemas/ExciseTypeMetaResponse',
                                        },
                                    },
                                },
                            },
                        },
                    },
                },
            },
        },
      '/api/v2/quotes/{quote_id}/convert_to_billing':
        {
          'post':
            {
              'operationId': 'convertQuoteToBilling',
              'summary': '見積書を請求書に変換',
              'security': [{ 'iv_auth': ['write'] }],
              'parameters':
                [
                  {
                    'name': 'excise_type',
                    'in': 'query',
                    'description': "消費税項目のデータ型<br />\nboolean を指定した場合は、 BooleanExciseRequest, BooleanExciseResponse になり、<br />\nenum を指定した場合は、 EnumExciseRequest, EnumExciseResponse になります\nまた、この項目を指定した場合、消費税項目名が excise になります。\n",
                    'schema':
                      {
                        'type': 'string',
                        'enum': ['boolean', 'enum'],
                        'default': 'boolean',
                      },
                  },
                  {
                    'name': 'quote_id',
                    'in': 'path',
                    'required': true,
                    'schema': { 'type': 'string' },
                  },
                ],
              'responses':
                {
                  '400':
                    {
                      'description': 'Bad request',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/ErrorResponse',
                                },
                            },
                        },
                    },
                  '401':
                    {
                      'description': 'Unauthorized',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/ErrorResponse',
                                },
                            },
                        },
                    },
                  '403':
                    {
                      'description': 'Forbidden',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/ErrorResponse',
                                },
                            },
                        },
                    },
                  '404':
                    {
                      'description': 'No resource found',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/ErrorResponse',
                                },
                            },
                        },
                    },
                  '422':
                    {
                      'description': 'Unprocessable entity',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/ErrorResponse',
                                },
                            },
                        },
                    },
                  '500':
                    {
                      'description': 'Internal server error',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/ErrorResponse',
                                },
                            },
                        },
                    },
                  '200':
                    {
                      'description': '成功',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  'type': 'object',
                                  'required': ['data', 'included'],
                                  'properties':
                                    {
                                      'data':
                                        {
                                          'type': 'object',
                                          'allOf':
                                            [
                                              {
                                                '$ref': '#/components/schemas/JSONAPI_BillingResponse',
                                              },
                                              {
                                                'type': 'object',
                                                'additionalProperties': false,
                                                'properties':
                                                  {
                                                    'relationships':
                                                      {
                                                        'type': 'object',
                                                        'additionalProperties': false,
                                                        'properties':
                                                          {
                                                            'items':
                                                              {
                                                                'type': 'object',
                                                                'additionalProperties': false,
                                                                'required':
                                                                  ['data'],
                                                                'properties':
                                                                  {
                                                                    'data':
                                                                      {
                                                                        'type': 'array',
                                                                        'items':
                                                                          {
                                                                            'type': 'object',
                                                                            'additionalProperties': false,
                                                                            'required':
                                                                              [
                                                                                'id',
                                                                                'type',
                                                                              ],
                                                                            'properties':
                                                                              {
                                                                                'id':
                                                                                  {
                                                                                    'type': 'string',
                                                                                  },
                                                                                'type':
                                                                                  {
                                                                                    'type': 'string',
                                                                                  },
                                                                              },
                                                                          },
                                                                      },
                                                                  },
                                                              },
                                                          },
                                                      },
                                                  },
                                              },
                                            ],
                                        },
                                      'included':
                                        {
                                          'type': 'array',
                                          'items':
                                            {
                                              'oneOf':
                                                [
                                                  {
                                                    '$ref': '#/components/schemas/JSONAPI_OrderingBasicItemResponse',
                                                  },
                                                  {
                                                    '$ref': '#/components/schemas/JSONAPI_OrderingBooleanExciseItemResponse',
                                                  },
                                                  {
                                                    '$ref': '#/components/schemas/JSONAPI_OrderingEnumExciseItemResponse',
                                                  },
                                                ],
                                            },
                                        },
                                      'meta':
                                        {
                                          '$ref': '#/components/schemas/ExciseTypeMetaResponse',
                                        },
                                    },
                                },
                            },
                        },
                    },
                },
            },
        },
      '/api/v2/sent_histories':
        {
          'get':
            {
              'operationId': 'getSentHistories',
              'summary': '送付履歴一覧の取得',
              'security': [{ 'iv_auth': ['read', 'write'] }],
              'parameters':
                [
                  {
                    'name': 'page',
                    'in': 'query',
                    'description': 'ページ番号',
                    'schema': { 'type': 'integer', 'minimum': 1, 'default': 1 },
                  },
                  {
                    'name': 'per_page',
                    'in': 'query',
                    'description': '1ページあたりの表示数',
                    'schema':
                      {
                        'type': 'integer',
                        'minimum': 1,
                        'maximum': 100,
                        'default': 100,
                      },
                  },
                ],
              'responses':
                {
                  '400':
                    {
                      'description': 'Bad request',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '401':
                    {
                      'description': 'Unauthorized',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '402':
                    {
                      'description': 'Payment required',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '403':
                    {
                      'description': 'Forbidden',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '404':
                    {
                      'description': 'No resource found',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '406':
                    {
                      'description': 'Not acceptable',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '408':
                    {
                      'description': 'Request Timeout',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '422':
                    {
                      'description': 'Unprocessable entity',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '429':
                    {
                      'description': 'Exceed call limit',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '500':
                    {
                      'description': 'Internal server error',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/V1CompatibleErrorResponse',
                                },
                            },
                        },
                    },
                  '200':
                    {
                      'description': '送付履歴一覧',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  'type': 'object',
                                  'required': ['data', 'meta'],
                                  'properties':
                                    {
                                      'data':
                                        {
                                          'type': 'array',
                                          'items':
                                            {
                                              '$ref': '#/components/schemas/JSONAPI_SentHistoryResponse',
                                            },
                                        },
                                      'meta':
                                        {
                                          '$ref': '#/components/schemas/IndexMetaResponse',
                                        },
                                    },
                                },
                            },
                        },
                    },
                },
            },
        },
    },
  'components':
    {
      'schemas':
        {
          'ExciseTypeMetaResponse':
            {
              'type': 'object',
              'additionalProperties': false,
              'properties':
                {
                  'excise_type':
                    { 'type': 'string', 'enum': ['boolean', 'enum'] },
                },
            },
          'IndexMetaResponse':
            {
              'type': 'object',
              'additionalProperties': false,
              'required':
                ['total_count', 'total_pages', 'current_page', 'per_page'],
              'properties':
                {
                  'total_count': { 'type': 'integer' },
                  'total_pages': { 'type': 'integer' },
                  'current_page': { 'type': 'integer' },
                  'per_page': { 'type': 'integer' },
                },
            },
          'BasicError':
            {
              'type': 'object',
              'additionalProperties': false,
              'properties':
                {
                  'id': { 'type': 'string' },
                  'status': { 'type': 'string' },
                  'code': { 'type': 'string' },
                  'title': { 'type': 'string' },
                  'detail': { 'type': 'string' },
                  'links':
                    {
                      'type': 'array',
                      'items':
                        {
                          'type': 'object',
                          'required': ['abount'],
                          'properties':
                            { 'about': { 'type': 'string', 'nullable': true } },
                        },
                    },
                  'source':
                    {
                      'type': 'object',
                      'properties':
                        {
                          'pointer': { 'type': 'string' },
                          'parameter': { 'type': 'string' },
                        },
                    },
                },
            },
          'V1CompatibleErrorResponse':
            {
              'type': 'object',
              'additionalProperties': false,
              'properties':
                { 'errors': { '$ref': '#/components/schemas/BasicError' } },
            },
          'ErrorResponse':
            {
              'type': 'object',
              'additionalProperties': false,
              'properties':
                {
                  'errors':
                    {
                      'type': 'array',
                      'items':
                        {
                          'oneOf':
                            [{ '$ref': '#/components/schemas/BasicError' }],
                        },
                    },
                },
            },
          'CreateQuoteRequest':
            {
              'type': 'object',
              'additionalProperties': false,
              'allOf':
                [
                  { '$ref': '#/components/schemas/QuoteRequest' },
                  {
                    'type': 'object',
                    'additionalProperties': false,
                    'properties':
                      {
                        'items':
                          {
                            'type': 'array',
                            'items':
                              {
                                'oneOf':
                                  [
                                    {
                                      'type': 'object',
                                      'additionalProperties': false,
                                      'allOf':
                                        [
                                          {
                                            '$ref': '#/components/schemas/QuoteItemRequest',
                                          },
                                          {
                                            '$ref': '#/components/schemas/IsExciseRequest',
                                          },
                                        ],
                                    },
                                    {
                                      'type': 'object',
                                      'additionalProperties': false,
                                      'allOf':
                                        [
                                          {
                                            '$ref': '#/components/schemas/QuoteItemRequest',
                                          },
                                          {
                                            '$ref': '#/components/schemas/BooleanExciseRequest',
                                          },
                                        ],
                                    },
                                    {
                                      'type': 'object',
                                      'additionalProperties': false,
                                      'allOf':
                                        [
                                          {
                                            '$ref': '#/components/schemas/QuoteItemRequest',
                                          },
                                          {
                                            '$ref': '#/components/schemas/EnumExciseRequest',
                                          },
                                        ],
                                    },
                                  ],
                              },
                          },
                      },
                  },
                ],
            },
          'UpdateQuoteRequest':
            {
              'type': 'object',
              'additionalProperties': false,
              'allOf':
                [
                  { '$ref': '#/components/schemas/QuoteRequest' },
                  {
                    'type': 'object',
                    'additionalProperties': false,
                    'properties':
                      {
                        'items':
                          {
                            'type': 'array',
                            'items':
                              {
                                'oneOf':
                                  [
                                    {
                                      'type': 'object',
                                      'additionalProperties': false,
                                      'allOf':
                                        [
                                          {
                                            '$ref': '#/components/schemas/UpdateQuoteItemRequest',
                                          },
                                          {
                                            '$ref': '#/components/schemas/IsExciseRequest',
                                          },
                                        ],
                                    },
                                    {
                                      'type': 'object',
                                      'additionalProperties': false,
                                      'allOf':
                                        [
                                          {
                                            '$ref': '#/components/schemas/UpdateQuoteItemRequest',
                                          },
                                          {
                                            '$ref': '#/components/schemas/BooleanExciseRequest',
                                          },
                                        ],
                                    },
                                    {
                                      'type': 'object',
                                      'additionalProperties': false,
                                      'allOf':
                                        [
                                          {
                                            '$ref': '#/components/schemas/UpdateQuoteItemRequest',
                                          },
                                          {
                                            '$ref': '#/components/schemas/EnumExciseRequest',
                                          },
                                        ],
                                    },
                                  ],
                              },
                          },
                      },
                  },
                ],
            },
          'QuoteRequest':
            {
              'type': 'object',
              'additionalProperties': false,
              'properties':
                {
                  'department_id':
                    { 'type': 'string', 'description': '部門ID' },
                  'quote_number':
                    {
                      'type': 'string',
                      'nullable': true,
                      'description': 'Quote number',
                    },
                  'quote_date':
                    {
                      'type': 'string',
                      'nullable': true,
                      'format': 'date',
                      'description': '発行日',
                    },
                  'expired_date':
                    {
                      'type': 'string',
                      'nullable': true,
                      'format': 'date',
                      'description': 'Expired date',
                    },
                  'title': { 'type': 'string', 'nullable': true },
                  'note':
                    {
                      'type': 'string',
                      'nullable': true,
                      'description': '備考',
                    },
                  'memo':
                    {
                      'type': 'string',
                      'nullable': true,
                      'description': 'メモ',
                    },
                  'tags':
                    {
                      'type': 'string',
                      'description': "カンマ区切り。ex: 'hoge,fuga'",
                    },
                },
            },
          'QuoteItemRequest':
            {
              'type': 'object',
              'additionalProperties': false,
              'properties':
                {
                  'name': { 'type': 'string' },
                  'code': { 'type': 'string', 'nullable': true },
                  'detail': { 'type': 'string', 'nullable': true },
                  'unit_price': { 'type': 'number', 'nullable': true },
                  'unit': { 'type': 'string', 'nullable': true },
                  'quantity': { 'type': 'number', 'nullable': true },
                },
            },
          'UpdateQuoteItemRequest':
            {
              'type': 'object',
              'additionalProperties': false,
              'allOf':
                [
                  {
                    '$ref': '#/components/schemas/UpdateIvDocumentItemRequest',
                  },
                  { '$ref': '#/components/schemas/QuoteItemRequest' },
                ],
            },
          'OfficeResponse':
            {
              'type': 'object',
              'additionalProperties': false,
              'required':
                [
                  'name',
                  'zip',
                  'prefecture',
                  'address1',
                  'address2',
                  'tel',
                  'fax',
                ],
              'properties':
                {
                  'name': { 'type': 'string' },
                  'zip': { 'type': 'string', 'nullable': true },
                  'prefecture':
                    {
                      'type': 'string',
                      'nullable': true,
                      'enum':
                        [
                          '北海道',
                          '青森県',
                          '岩手県',
                          '宮城県',
                          '秋田県',
                          '山形県',
                          '福島県',
                          '茨城県',
                          '栃木県',
                          '群馬県',
                          '埼玉県',
                          '千葉県',
                          '東京都',
                          '神奈川県',
                          '新潟県',
                          '富山県',
                          '石川県',
                          '福井県',
                          '山梨県',
                          '長野県',
                          '岐阜県',
                          '静岡県',
                          '愛知県',
                          '三重県',
                          '滋賀県',
                          '京都府',
                          '大阪府',
                          '兵庫県',
                          '奈良県',
                          '和歌山県',
                          '鳥取県',
                          '島根県',
                          '岡山県',
                          '広島県',
                          '山口県',
                          '徳島県',
                          '香川県',
                          '愛媛県',
                          '高知県',
                          '福岡県',
                          '佐賀県',
                          '長崎県',
                          '熊本県',
                          '大分県',
                          '宮崎県',
                          '鹿児島県',
                          '沖縄県',
                        ],
                    },
                  'address1': { 'type': 'string', 'nullable': true },
                  'address2': { 'type': 'string', 'nullable': true },
                  'tel': { 'type': 'string', 'nullable': true },
                  'fax': { 'type': 'string', 'nullable': true },
                },
            },
          'JSONAPI_OfficeResponse':
            {
              'type': 'object',
              'additionalProperties': false,
              'required': ['id', 'type', 'attributes'],
              'properties':
                {
                  'id': { 'type': 'string' },
                  'type': { 'type': 'string' },
                  'attributes':
                    { '$ref': '#/components/schemas/OfficeResponse' },
                },
            },
          'PartnerResponse':
            {
              'type': 'object',
              'additionalProperties': false,
              'required':
                [
                  'code',
                  'name',
                  'name_kana',
                  'name_suffix',
                  'memo',
                  'created_at',
                  'updated_at',
                ],
              'properties':
                {
                  'code': { 'type': 'string', 'nullable': true },
                  'name': { 'type': 'string' },
                  'name_kana': { 'type': 'string', 'nullable': true },
                  'name_suffix': { 'type': 'string' },
                  'memo': { 'type': 'string', 'nullable': true },
                  'created_at': { 'type': 'string', 'format': 'date-time' },
                  'updated_at': { 'type': 'string', 'format': 'date-time' },
                },
            },
          'JSONAPI_PartnerResponse':
            {
              'type': 'object',
              'additionalProperties': false,
              'required': ['id', 'type', 'attributes'],
              'properties':
                {
                  'id': { 'type': 'string' },
                  'type': { 'type': 'string' },
                  'attributes':
                    { '$ref': '#/components/schemas/PartnerResponse' },
                },
            },
          'PartnerDepartmentResponse':
            {
              'type': 'object',
              'additionalProperties': false,
              'required':
                [
                  'zip',
                  'tel',
                  'prefecture',
                  'address1',
                  'address2',
                  'person_name',
                  'person_title',
                  'name',
                  'email',
                  'cc_emails',
                  'created_at',
                  'updated_at',
                ],
              'properties':
                {
                  'zip': { 'type': 'string', 'nullable': true },
                  'tel': { 'type': 'string', 'nullable': true },
                  'prefecture':
                    {
                      'type': 'string',
                      'nullable': true,
                      'enum':
                        [
                          '北海道',
                          '青森県',
                          '岩手県',
                          '宮城県',
                          '秋田県',
                          '山形県',
                          '福島県',
                          '茨城県',
                          '栃木県',
                          '群馬県',
                          '埼玉県',
                          '千葉県',
                          '東京都',
                          '神奈川県',
                          '新潟県',
                          '富山県',
                          '石川県',
                          '福井県',
                          '山梨県',
                          '長野県',
                          '岐阜県',
                          '静岡県',
                          '愛知県',
                          '三重県',
                          '滋賀県',
                          '京都府',
                          '大阪府',
                          '兵庫県',
                          '奈良県',
                          '和歌山県',
                          '鳥取県',
                          '島根県',
                          '岡山県',
                          '広島県',
                          '山口県',
                          '徳島県',
                          '香川県',
                          '愛媛県',
                          '高知県',
                          '福岡県',
                          '佐賀県',
                          '長崎県',
                          '熊本県',
                          '大分県',
                          '宮崎県',
                          '鹿児島県',
                          '沖縄県',
                        ],
                    },
                  'address1': { 'type': 'string', 'nullable': true },
                  'address2': { 'type': 'string', 'nullable': true },
                  'person_name': { 'type': 'string', 'nullable': true },
                  'person_title': { 'type': 'string', 'nullable': true },
                  'name': { 'type': 'string', 'nullable': true },
                  'email': { 'type': 'string', 'nullable': true },
                  'cc_emails': { 'type': 'string', 'nullable': true },
                  'created_at': { 'type': 'string', 'format': 'date-time' },
                  'updated_at': { 'type': 'string', 'format': 'date-time' },
                },
            },
          'JSONAPI_PartnerDepartmentResponse':
            {
              'type': 'object',
              'additionalProperties': false,
              'required': ['id', 'type', 'attributes'],
              'properties':
                {
                  'id': { 'type': 'string' },
                  'type': { 'type': 'string' },
                  'attributes':
                    {
                      '$ref': '#/components/schemas/PartnerDepartmentResponse',
                    },
                },
            },
          'ItemResponse':
            {
              'type': 'object',
              'additionalProperties': false,
              'required':
                [
                  'item_code',
                  'name',
                  'detail',
                  'quantity',
                  'unit_price',
                  'unit',
                  'price',
                  'created_at',
                  'updated_at',
                ],
              'properties':
                {
                  'name': { 'type': 'string', 'nullable': true },
                  'item_code': { 'type': 'string', 'nullable': true },
                  'detail': { 'type': 'string', 'nullable': true },
                  'unit_price':
                    {
                      'type': 'string',
                      'nullable': true,
                      'pattern': "^\\-?\\d+\\.\\d+$",
                    },
                  'unit': { 'type': 'string', 'nullable': true },
                  'quantity':
                    {
                      'type': 'string',
                      'nullable': true,
                      'pattern': "^\\-?\\d+\\.\\d+$",
                    },
                  'price':
                    {
                      'type': 'string',
                      'nullable': true,
                      'pattern': "^\\-?\\d+\\.\\d+$",
                    },
                  'is_deduct':
                    {
                      'type': 'boolean',
                      'description': '源泉徴収するかどうか。個人事業者の場合のみ出力されます',
                    },
                  'created_at': { 'type': 'string', 'format': 'date-time' },
                  'updated_at': { 'type': 'string', 'format': 'date-time' },
                },
            },
          'DispOrderResponse':
            {
              'type': 'object',
              'additionalProperties': false,
              'required': ['disp_order'],
              'properties':
                {
                  'disp_order':
                    {
                      'type': 'integer',
                      'description': '表示順。小さい順にリストされます。同じ値が複数ある場合、それらの順序は保証されません',
                    },
                },
            },
          'BasicExciseResponse':
            {
              'type': 'object',
              'additionalProperties': false,
              'required': ['is_excise'],
              'properties':
                {
                  'is_excise':
                    { 'type': 'boolean', 'description': '課税消費税かどうか' },
                },
            },
          'BooleanExciseResponse':
            {
              'type': 'object',
              'additionalProperties': false,
              'required': ['excise'],
              'properties':
                {
                  'excise':
                    { 'type': 'boolean', 'description': '課税消費税かどうか' },
                },
            },
          'EnumExciseResponse':
            {
              'type': 'object',
              'additionalProperties': false,
              'required': ['excise'],
              'properties':
                {
                  'excise':
                    {
                      'type': 'string',
                      'enum':
                        [
                          'untaxable',
                          'non_taxable',
                          'tax_exemption',
                          'five_percent',
                          'eight_percent',
                          'eight_percent_as_reduced_tax_rate',
                          'ten_percent',
                        ],
                      'description': 'untaxable: 不課税<br />non_taxable: 非課税<br />tax_exemption: 免税<br />five_percent: 5%<br />eight_percent: 8%<br />eight_percent_as_reduced_tax_rate: 8%(軽減税率)<br />ten_percent: 10%',
                    },
                },
            },
          'BasicItemResponse':
            {
              'type': 'object',
              'allOf':
                [
                  { '$ref': '#/components/schemas/ItemResponse' },
                  { '$ref': '#/components/schemas/BasicExciseResponse' },
                ],
            },
          'BooleanExciseItemResponse':
            {
              'type': 'object',
              'allOf':
                [
                  { '$ref': '#/components/schemas/ItemResponse' },
                  { '$ref': '#/components/schemas/BooleanExciseResponse' },
                ],
            },
          'EnumExciseItemResponse':
            {
              'type': 'object',
              'allOf':
                [
                  { '$ref': '#/components/schemas/ItemResponse' },
                  { '$ref': '#/components/schemas/EnumExciseResponse' },
                ],
            },
          'OrderingBasicItemResponse':
            {
              'type': 'object',
              'allOf':
                [
                  { '$ref': '#/components/schemas/ItemResponse' },
                  { '$ref': '#/components/schemas/BasicExciseResponse' },
                  { '$ref': '#/components/schemas/DispOrderResponse' },
                ],
            },
          'OrderingBooleanExciseItemResponse':
            {
              'type': 'object',
              'allOf':
                [
                  { '$ref': '#/components/schemas/ItemResponse' },
                  { '$ref': '#/components/schemas/BooleanExciseResponse' },
                  { '$ref': '#/components/schemas/DispOrderResponse' },
                ],
            },
          'OrderingEnumExciseItemResponse':
            {
              'type': 'object',
              'allOf':
                [
                  { '$ref': '#/components/schemas/ItemResponse' },
                  { '$ref': '#/components/schemas/EnumExciseResponse' },
                  { '$ref': '#/components/schemas/DispOrderResponse' },
                ],
            },
          'JSONAPI_BasicItemResponse':
            {
              'type': 'object',
              'additionalProperties': false,
              'required': ['id', 'type', 'attributes'],
              'properties':
                {
                  'id': { 'type': 'string' },
                  'type': { 'type': 'string' },
                  'attributes':
                    { '$ref': '#/components/schemas/BasicItemResponse' },
                },
            },
          'JSONAPI_BooleanExciseItemResponse':
            {
              'type': 'object',
              'additionalProperties': false,
              'required': ['id', 'type', 'attributes'],
              'properties':
                {
                  'id': { 'type': 'string' },
                  'type': { 'type': 'string' },
                  'attributes':
                    {
                      '$ref': '#/components/schemas/BooleanExciseItemResponse',
                    },
                },
            },
          'JSONAPI_EnumExciseItemResponse':
            {
              'type': 'object',
              'additionalProperties': false,
              'required': ['id', 'type', 'attributes'],
              'properties':
                {
                  'id': { 'type': 'string' },
                  'type': { 'type': 'string' },
                  'attributes':
                    { '$ref': '#/components/schemas/EnumExciseItemResponse' },
                },
            },
          'JSONAPI_OrderingBasicItemResponse':
            {
              'type': 'object',
              'additionalProperties': false,
              'required': ['id', 'type', 'attributes'],
              'properties':
                {
                  'id': { 'type': 'string' },
                  'type': { 'type': 'string' },
                  'attributes':
                    {
                      '$ref': '#/components/schemas/OrderingBasicItemResponse',
                    },
                },
            },
          'JSONAPI_OrderingBooleanExciseItemResponse':
            {
              'type': 'object',
              'additionalProperties': false,
              'required': ['id', 'type', 'attributes'],
              'properties':
                {
                  'id': { 'type': 'string' },
                  'type': { 'type': 'string' },
                  'attributes':
                    {
                      '$ref': '#/components/schemas/OrderingBooleanExciseItemResponse',
                    },
                },
            },
          'JSONAPI_OrderingEnumExciseItemResponse':
            {
              'type': 'object',
              'additionalProperties': false,
              'required': ['id', 'type', 'attributes'],
              'properties':
                {
                  'id': { 'type': 'string' },
                  'type': { 'type': 'string' },
                  'attributes':
                    {
                      '$ref': '#/components/schemas/OrderingEnumExciseItemResponse',
                    },
                },
            },
          'BillingResponse':
            {
              'type': 'object',
              'additionalProperties': false,
              'required':
                [
                  'pdf_url',
                  'operator_id',
                  'partner_id',
                  'department_id',
                  'member_id',
                  'member_name',
                  'partner_name',
                  'partner_name_suffix',
                  'partner_detail',
                  'office_name',
                  'office_detail',
                  'title',
                  'excise_price',
                  'excise_price_of_five_percent',
                  'excise_price_of_eight_percent',
                  'excise_price_of_eight_percent_as_reduced_tax_rate',
                  'excise_price_of_ten_percent',
                  'subtotal',
                  'subtotal_of_untaxable_excise',
                  'subtotal_of_non_taxable_excise',
                  'subtotal_of_tax_exemption_excise',
                  'subtotal_of_five_percent_excise',
                  'subtotal_of_eight_percent_excise',
                  'subtotal_of_eight_percent_as_reduced_tax_rate_excise',
                  'subtotal_of_ten_percent_excise',
                  'memo',
                  'payment_condition',
                  'total_price',
                  'billing_date',
                  'due_date',
                  'sales_date',
                  'billing_number',
                  'note',
                  'document_name',
                  'payment_status',
                  'email_status',
                  'posting_status',
                  'created_at',
                  'updated_at',
                  'is_downloaded',
                  'is_locked',
                  'tags',
                ],
              'properties':
                {
                  'pdf_url': { 'type': 'string' },
                  'operator_id': { 'type': 'string', 'nullable': true },
                  'partner_id': { 'type': 'string', 'nullable': true },
                  'department_id':
                    {
                      'type': 'string',
                      'nullable': true,
                      'description': '部門ID',
                    },
                  'member_id': { 'type': 'string', 'nullable': true },
                  'member_name': { 'type': 'string', 'nullable': true },
                  'partner_name': { 'type': 'string' },
                  'partner_name_suffix':
                    {
                      'type': 'string',
                      'nullable': true,
                      'enum': ['御中', '様'],
                    },
                  'partner_detail': { 'type': 'string', 'nullable': true },
                  'office_name': { 'type': 'string', 'nullable': true },
                  'office_detail': { 'type': 'string', 'nullable': true },
                  'title': { 'type': 'string', 'nullable': true },
                  'excise_price':
                    {
                      'type': 'string',
                      'pattern': "^\\-?\\d+\\.\\d+$",
                      'description': '消費税',
                    },
                  'excise_price_of_five_percent':
                    { 'type': 'string', 'pattern': "^\\-?\\d+\\.\\d+$" },
                  'excise_price_of_eight_percent':
                    { 'type': 'string', 'pattern': "^\\-?\\d+\\.\\d+$" },
                  'excise_price_of_eight_percent_as_reduced_tax_rate':
                    { 'type': 'string', 'pattern': "^\\-?\\d+\\.\\d+$" },
                  'excise_price_of_ten_percent':
                    { 'type': 'string', 'pattern': "^\\-?\\d+\\.\\d+$" },
                  'subtotal':
                    {
                      'type': 'string',
                      'pattern': "^\\-?\\d+\\.\\d+$",
                      'description': '小計',
                    },
                  'subtotal_of_untaxable_excise':
                    { 'type': 'string', 'pattern': "^\\-?\\d+\\.\\d+$" },
                  'subtotal_of_non_taxable_excise':
                    { 'type': 'string', 'pattern': "^\\-?\\d+\\.\\d+$" },
                  'subtotal_of_tax_exemption_excise':
                    { 'type': 'string', 'pattern': "^\\-?\\d+\\.\\d+$" },
                  'subtotal_of_five_percent_excise':
                    { 'type': 'string', 'pattern': "^\\-?\\d+\\.\\d+$" },
                  'subtotal_of_eight_percent_excise':
                    { 'type': 'string', 'pattern': "^\\-?\\d+\\.\\d+$" },
                  'subtotal_of_eight_percent_as_reduced_tax_rate_excise':
                    { 'type': 'string', 'pattern': "^\\-?\\d+\\.\\d+$" },
                  'subtotal_of_ten_percent_excise':
                    { 'type': 'string', 'pattern': "^\\-?\\d+\\.\\d+$" },
                  'memo':
                    {
                      'type': 'string',
                      'nullable': true,
                      'description': 'メモ',
                    },
                  'payment_condition':
                    {
                      'type': 'string',
                      'nullable': true,
                      'description': '支払先',
                    },
                  'total_price':
                    {
                      'type': 'string',
                      'nullable': true,
                      'pattern': "^\\-?\\d+\\.\\d+$",
                      'description': '合計',
                    },
                  'billing_date':
                    {
                      'type': 'string',
                      'nullable': true,
                      'format': 'date',
                      'description': '請求日',
                    },
                  'due_date':
                    {
                      'type': 'string',
                      'nullable': true,
                      'format': 'date',
                      'description': '支払い期限',
                    },
                  'sales_date':
                    {
                      'type': 'string',
                      'nullable': true,
                      'format': 'date',
                      'description': 'Sales date',
                    },
                  'billing_number':
                    {
                      'type': 'string',
                      'nullable': true,
                      'description': 'Billing number',
                    },
                  'note':
                    {
                      'type': 'string',
                      'nullable': true,
                      'description': '備考',
                    },
                  'document_name': { 'type': 'string' },
                  'payment_status':
                    {
                      'type': 'string',
                      'enum':
                        [
                          '未設定',
                          '未入金',
                          '入金済み',
                          '未払い',
                          '振込済み',
                          '未設定',
                        ],
                    },
                  'email_status':
                    {
                      'type': 'string',
                      'enum': ['送付済み', '受領済み', '受信', '未送信'],
                    },
                  'posting_status':
                    {
                      'type': 'string',
                      'enum':
                        [
                          '郵送依頼',
                          '郵送済み',
                          '郵送取消',
                          '郵送失敗',
                          '未郵送',
                        ],
                    },
                  'created_at': { 'type': 'string', 'format': 'date-time' },
                  'updated_at': { 'type': 'string', 'format': 'date-time' },
                  'is_downloaded': { 'type': 'boolean' },
                  'is_locked': { 'type': 'boolean' },
                  'deduct_price':
                    {
                      'type': 'string',
                      'nullable': true,
                      'description': '源泉徴収税。個人事業者の場合のみ出力されます',
                    },
                  'tags': { 'type': 'array', 'items': { 'type': 'string' } },
                },
            },
          'JSONAPI_BillingResponse':
            {
              'type': 'object',
              'additionalProperties': false,
              'required': ['id', 'type', 'attributes'],
              'properties':
                {
                  'id': { 'type': 'string' },
                  'type': { 'type': 'string' },
                  'attributes':
                    { '$ref': '#/components/schemas/BillingResponse' },
                },
            },
          'QuoteResponse':
            {
              'type': 'object',
              'additionalProperties': false,
              'required':
                [
                  'pdf_url',
                  'operator_id',
                  'partner_id',
                  'department_id',
                  'member_id',
                  'member_name',
                  'partner_name',
                  'partner_name_suffix',
                  'partner_detail',
                  'office_name',
                  'office_detail',
                  'title',
                  'excise_price',
                  'excise_price_of_five_percent',
                  'excise_price_of_eight_percent',
                  'excise_price_of_eight_percent_as_reduced_tax_rate',
                  'excise_price_of_ten_percent',
                  'subtotal',
                  'subtotal_of_untaxable_excise',
                  'subtotal_of_non_taxable_excise',
                  'subtotal_of_tax_exemption_excise',
                  'subtotal_of_five_percent_excise',
                  'subtotal_of_eight_percent_excise',
                  'subtotal_of_eight_percent_as_reduced_tax_rate_excise',
                  'subtotal_of_ten_percent_excise',
                  'memo',
                  'total_price',
                  'quote_date',
                  'expired_date',
                  'quote_number',
                  'note',
                  'document_name',
                  'posting_status',
                  'created_at',
                  'updated_at',
                  'is_downloaded',
                  'is_locked',
                  'tags',
                ],
              'properties':
                {
                  'pdf_url': { 'type': 'string' },
                  'operator_id': { 'type': 'string', 'nullable': true },
                  'partner_id': { 'type': 'string', 'nullable': true },
                  'department_id':
                    {
                      'type': 'string',
                      'nullable': true,
                      'description': '部門ID',
                    },
                  'member_id': { 'type': 'string', 'nullable': true },
                  'member_name': { 'type': 'string', 'nullable': true },
                  'partner_name': { 'type': 'string' },
                  'partner_name_suffix':
                    {
                      'type': 'string',
                      'nullable': true,
                      'enum': ['御中', '様'],
                    },
                  'partner_detail': { 'type': 'string', 'nullable': true },
                  'office_name': { 'type': 'string', 'nullable': true },
                  'office_detail': { 'type': 'string', 'nullable': true },
                  'title': { 'type': 'string', 'nullable': true },
                  'excise_price':
                    {
                      'type': 'string',
                      'pattern': "^\\-?\\d+\\.\\d+$",
                      'description': '消費税',
                    },
                  'excise_price_of_five_percent':
                    { 'type': 'string', 'pattern': "^\\-?\\d+\\.\\d+$" },
                  'excise_price_of_eight_percent':
                    { 'type': 'string', 'pattern': "^\\-?\\d+\\.\\d+$" },
                  'excise_price_of_eight_percent_as_reduced_tax_rate':
                    { 'type': 'string', 'pattern': "^\\-?\\d+\\.\\d+$" },
                  'excise_price_of_ten_percent':
                    { 'type': 'string', 'pattern': "^\\-?\\d+\\.\\d+$" },
                  'subtotal':
                    {
                      'type': 'string',
                      'pattern': "^\\-?\\d+\\.\\d+$",
                      'description': '小計',
                    },
                  'subtotal_of_untaxable_excise':
                    { 'type': 'string', 'pattern': "^\\-?\\d+\\.\\d+$" },
                  'subtotal_of_non_taxable_excise':
                    { 'type': 'string', 'pattern': "^\\-?\\d+\\.\\d+$" },
                  'subtotal_of_tax_exemption_excise':
                    { 'type': 'string', 'pattern': "^\\-?\\d+\\.\\d+$" },
                  'subtotal_of_five_percent_excise':
                    { 'type': 'string', 'pattern': "^\\-?\\d+\\.\\d+$" },
                  'subtotal_of_eight_percent_excise':
                    { 'type': 'string', 'pattern': "^\\-?\\d+\\.\\d+$" },
                  'subtotal_of_eight_percent_as_reduced_tax_rate_excise':
                    { 'type': 'string', 'pattern': "^\\-?\\d+\\.\\d+$" },
                  'subtotal_of_ten_percent_excise':
                    { 'type': 'string', 'pattern': "^\\-?\\d+\\.\\d+$" },
                  'memo':
                    {
                      'type': 'string',
                      'nullable': true,
                      'description': 'メモ',
                    },
                  'total_price':
                    {
                      'type': 'string',
                      'nullable': true,
                      'pattern': "^\\-?\\d+\\.\\d+$",
                      'description': '合計',
                    },
                  'quote_date':
                    {
                      'type': 'string',
                      'nullable': true,
                      'format': 'date',
                      'description': '発行日',
                    },
                  'expired_date':
                    {
                      'type': 'string',
                      'nullable': true,
                      'format': 'date',
                      'description': 'Expired date',
                    },
                  'quote_number':
                    {
                      'type': 'string',
                      'nullable': true,
                      'description': 'Quote number',
                    },
                  'note':
                    {
                      'type': 'string',
                      'nullable': true,
                      'description': '備考',
                    },
                  'document_name': { 'type': 'string' },
                  'order_status':
                    {
                      'type': 'string',
                      'nullable': true,
                      'enum':
                        ['default', 'failure', 'not_received', 'received'],
                    },
                  'transmit_status':
                    {
                      'type': 'string',
                      'enum': ['sent', 'already_read', 'received', 'default'],
                    },
                  'posting_status':
                    {
                      'type': 'string',
                      'enum': ['request', 'sent', 'cancel', 'error', 'default'],
                    },
                  'created_at': { 'type': 'string', 'format': 'date-time' },
                  'updated_at': { 'type': 'string', 'format': 'date-time' },
                  'is_downloaded': { 'type': 'boolean' },
                  'is_locked': { 'type': 'boolean' },
                  'deduct_price':
                    {
                      'type': 'string',
                      'nullable': true,
                      'description': '源泉徴収税',
                    },
                  'tags': { 'type': 'array', 'items': { 'type': 'string' } },
                },
            },
          'JSONAPI_QuoteResponse':
            {
              'type': 'object',
              'additionalProperties': false,
              'required': ['id', 'type', 'attributes'],
              'properties':
                {
                  'id': { 'type': 'string' },
                  'type': { 'type': 'string' },
                  'attributes':
                    { '$ref': '#/components/schemas/QuoteResponse' },
                },
            },
          'SentHistoryResponse':
            {
              'type': 'object',
              'additionalProperties': false,
              'required':
                [
                  'operator_id',
                  'type',
                  'document_type',
                  'document_id',
                  'from',
                  'to',
                  'cc',
                  'sent_at',
                ],
              'properties':
                {
                  'operator_id': { 'type': 'string' },
                  'type':
                    {
                      'type': 'string',
                      'nullable': true,
                      'enum': ['メール', '郵送'],
                    },
                  'document_type': { 'type': 'string' },
                  'document_id': { 'type': 'string' },
                  'from': { 'type': 'string', 'nullable': true },
                  'to': { 'type': 'string', 'nullable': true },
                  'cc': { 'type': 'string', 'nullable': true },
                  'sender_name': { 'type': 'string', 'nullable': true },
                  'reply_to': { 'type': 'string', 'nullable': true },
                  'sent_at': { 'type': 'string', 'format': 'date-time' },
                },
            },
          'JSONAPI_SentHistoryResponse':
            {
              'type': 'object',
              'additionalProperties': false,
              'required': ['id', 'type', 'attributes'],
              'properties':
                {
                  'id': { 'type': 'string' },
                  'type': { 'type': 'string' },
                  'attributes':
                    { '$ref': '#/components/schemas/SentHistoryResponse' },
                },
            },
          'OfficeRequest':
            {
              'type': 'object',
              'additionalProperties': false,
              'properties':
                {
                  'name': { 'type': 'string' },
                  'prefecture':
                    {
                      'type': 'string',
                      'nullable': true,
                      'enum':
                        [
                          '北海道',
                          '青森県',
                          '岩手県',
                          '宮城県',
                          '秋田県',
                          '山形県',
                          '福島県',
                          '茨城県',
                          '栃木県',
                          '群馬県',
                          '埼玉県',
                          '千葉県',
                          '東京都',
                          '神奈川県',
                          '新潟県',
                          '富山県',
                          '石川県',
                          '福井県',
                          '山梨県',
                          '長野県',
                          '岐阜県',
                          '静岡県',
                          '愛知県',
                          '三重県',
                          '滋賀県',
                          '京都府',
                          '大阪府',
                          '兵庫県',
                          '奈良県',
                          '和歌山県',
                          '鳥取県',
                          '島根県',
                          '岡山県',
                          '広島県',
                          '山口県',
                          '徳島県',
                          '香川県',
                          '愛媛県',
                          '高知県',
                          '福岡県',
                          '佐賀県',
                          '長崎県',
                          '熊本県',
                          '大分県',
                          '宮崎県',
                          '鹿児島県',
                          '沖縄県',
                        ],
                    },
                  'zip': { 'type': 'string', 'nullable': true },
                  'address1': { 'type': 'string', 'nullable': true },
                  'address2': { 'type': 'string', 'nullable': true },
                  'tel': { 'type': 'string', 'nullable': true },
                  'fax': { 'type': 'string', 'nullable': true },
                },
            },
          'PartnerRequest':
            {
              'type': 'object',
              'additionalProperties': false,
              'properties':
                {
                  'code':
                    {
                      'type': 'string',
                      'nullable': true,
                      'description': '顧客コード',
                    },
                  'name': { 'type': 'string' },
                  'name_kana': { 'type': 'string', 'nullable': true },
                  'name_suffix':
                    {
                      'type': 'string',
                      'nullable': true,
                      'description': '敬称',
                      'enum': ['御中', '様'],
                    },
                  'memo': { 'type': 'string', 'nullable': true },
                },
            },
          'PartnerDepartmentRequest':
            {
              'type': 'object',
              'additionalProperties': false,
              'properties':
                {
                  'zip':
                    {
                      'type': 'string',
                      'nullable': true,
                      'description': '郵便番号',
                    },
                  'tel': { 'type': 'string', 'nullable': true },
                  'prefecture':
                    {
                      'type': 'string',
                      'nullable': true,
                      'enum':
                        [
                          '北海道',
                          '青森県',
                          '岩手県',
                          '宮城県',
                          '秋田県',
                          '山形県',
                          '福島県',
                          '茨城県',
                          '栃木県',
                          '群馬県',
                          '埼玉県',
                          '千葉県',
                          '東京都',
                          '神奈川県',
                          '新潟県',
                          '富山県',
                          '石川県',
                          '福井県',
                          '山梨県',
                          '長野県',
                          '岐阜県',
                          '静岡県',
                          '愛知県',
                          '三重県',
                          '滋賀県',
                          '京都府',
                          '大阪府',
                          '兵庫県',
                          '奈良県',
                          '和歌山県',
                          '鳥取県',
                          '島根県',
                          '岡山県',
                          '広島県',
                          '山口県',
                          '徳島県',
                          '香川県',
                          '愛媛県',
                          '高知県',
                          '福岡県',
                          '佐賀県',
                          '長崎県',
                          '熊本県',
                          '大分県',
                          '宮崎県',
                          '鹿児島県',
                          '沖縄県',
                        ],
                      'default': '東京都',
                    },
                  'address1': { 'type': 'string', 'nullable': true },
                  'address2': { 'type': 'string', 'nullable': true },
                  'person_name':
                    {
                      'type': 'string',
                      'nullable': true,
                      'description': '担当者氏名',
                    },
                  'person_title':
                    {
                      'type': 'string',
                      'nullable': true,
                      'description': '担当者役職',
                    },
                  'email': { 'type': 'string', 'nullable': true },
                  'cc_emails':
                    {
                      'type': 'string',
                      'nullable': true,
                      'description': 'カンマ区切りで複数入力可',
                    },
                },
            },
          'CreatePartnerDepartmentRequest':
            {
              'type': 'object',
              'additionalProperties': false,
              'allOf':
                [
                  { '$ref': '#/components/schemas/PartnerDepartmentRequest' },
                  {
                    'type': 'object',
                    'additionalProperties': false,
                    'properties':
                      {
                        'department_name':
                          {
                            'type': 'string',
                            'nullable': true,
                            'description': '部門名',
                          },
                      },
                  },
                ],
            },
          'UpdatePartnerDepartmentRequest':
            {
              'type': 'object',
              'additionalProperties': false,
              'allOf':
                [
                  { '$ref': '#/components/schemas/PartnerDepartmentRequest' },
                  {
                    'type': 'object',
                    'additionalProperties': false,
                    'properties':
                      {
                        'name':
                          {
                            'type': 'string',
                            'nullable': true,
                            'description': '部門名',
                          },
                      },
                  },
                ],
            },
          'ItemRequest':
            {
              'type': 'object',
              'additionalProperties': false,
              'properties':
                {
                  'name': { 'type': 'string' },
                  'code': { 'type': 'string', 'nullable': true },
                  'detail': { 'type': 'string', 'nullable': true },
                  'unit_price': { 'type': 'number', 'nullable': true },
                  'unit': { 'type': 'string', 'nullable': true },
                  'quantity': { 'type': 'number', 'nullable': true },
                  'deduct': { 'type': 'boolean', 'default': false },
                },
            },
          'IsExciseRequest':
            {
              'type': 'object',
              'additionalProperties': false,
              'properties':
                {
                  'is_excise':
                    {
                      'type': 'boolean',
                      'default': true,
                      'description': "true の場合、マネーフォワード クラウド請求書の「帳票設定」で設定している消費税が、<br />\nfalse の場合には、不課税が設定されます。\n",
                    },
                },
            },
          'BooleanExciseRequest':
            {
              'type': 'object',
              'additionalProperties': false,
              'properties':
                {
                  'excise':
                    {
                      'type': 'boolean',
                      'default': true,
                      'description': "true の場合、マネーフォワード クラウド請求書の「帳票設定」で設定している消費税が、<br />\nfalse の場合には、不課税が設定されます。\n",
                    },
                },
            },
          'EnumExciseRequest':
            {
              'type': 'object',
              'additionalProperties': false,
              'properties':
                {
                  'excise':
                    {
                      'type': 'string',
                      'enum':
                        [
                          'untaxable',
                          'non_taxable',
                          'tax_exemption',
                          'five_percent',
                          'eight_percent',
                          'eight_percent_as_reduced_tax_rate',
                          'ten_percent',
                        ],
                      'description': 'untaxable: 不課税<br />non_taxable: 非課税<br />tax_exemption: 免税<br />five_percent: 5%<br />eight_percent: 8%<br />eight_percent_as_reduced_tax_rate: 8%(軽減税率)<br />ten_percent: 10%',
                    },
                },
            },
          'BooleanExciseItemRequest':
            {
              'type': 'object',
              'allOf':
                [
                  { '$ref': '#/components/schemas/ItemRequest' },
                  { '$ref': '#/components/schemas/BooleanExciseRequest' },
                ],
            },
          'EnumExciseItemRequest':
            {
              'type': 'object',
              'allOf':
                [
                  { '$ref': '#/components/schemas/ItemRequest' },
                  { '$ref': '#/components/schemas/EnumExciseRequest' },
                ],
            },
          'IvDocumentBooleanExciseItemRequest':
            {
              'type': 'object',
              'allOf':
                [
                  { '$ref': '#/components/schemas/ItemRequest' },
                  { '$ref': '#/components/schemas/BooleanExciseRequest' },
                  {
                    '$ref': '#/components/schemas/IvDocumentItemDisplayOrderRequest',
                  },
                ],
            },
          'IvDocumentEnumExciseItemRequest':
            {
              'type': 'object',
              'allOf':
                [
                  { '$ref': '#/components/schemas/ItemRequest' },
                  { '$ref': '#/components/schemas/EnumExciseRequest' },
                  {
                    '$ref': '#/components/schemas/IvDocumentItemDisplayOrderRequest',
                  },
                ],
            },
          'UpdateIvDocumentBooleanExciseItemRequest':
            {
              'type': 'object',
              'allOf':
                [
                  {
                    '$ref': '#/components/schemas/UpdateIvDocumentItemRequest',
                  },
                  {
                    '$ref': '#/components/schemas/IvDocumentBooleanExciseItemRequest',
                  },
                ],
            },
          'UpdateIvDocumentEnumExciseItemRequest':
            {
              'type': 'object',
              'allOf':
                [
                  {
                    '$ref': '#/components/schemas/UpdateIvDocumentItemRequest',
                  },
                  {
                    '$ref': '#/components/schemas/IvDocumentEnumExciseItemRequest',
                  },
                ],
            },
          'UpdateIvDocumentItemRequest':
            {
              'type': 'object',
              'additionalProperties': false,
              'properties':
                {
                  'id':
                    {
                      'type': 'string',
                      'nullable': true,
                      'description': '該当idに紐づく帳票の品目がある場合には更新。品目追加の場合には id の key を削除してください。',
                    },
                  '_destroy':
                    {
                      'type': 'boolean',
                      'default': false,
                      'description': '帳票の品目を削除する場合に true を入力してください。品目マスタからは削除されません。',
                    },
                },
            },
          'IvDocumentItemDisplayOrderRequest':
            {
              'type': 'object',
              'additionalProperties': false,
              'properties':
                {
                  'disp_order':
                    {
                      'type': 'integer',
                      'default': 0,
                      'description': '表示順。小さい順にリストされます。同じ値が複数ある場合、それらの順序は保証されません。',
                    },
                },
            },
          'CreateBillingRequest':
            {
              'type': 'object',
              'additionalProperties': false,
              'allOf':
                [
                  { '$ref': '#/components/schemas/BillingRequest' },
                  {
                    'type': 'object',
                    'additionalProperties': false,
                    'properties':
                      {
                        'items':
                          {
                            'type': 'array',
                            'items':
                              {
                                'oneOf':
                                  [
                                    {
                                      '$ref': '#/components/schemas/IvDocumentBooleanExciseItemRequest',
                                    },
                                    {
                                      '$ref': '#/components/schemas/IvDocumentEnumExciseItemRequest',
                                    },
                                  ],
                              },
                          },
                      },
                  },
                ],
            },
          'UpdateBillingRequest':
            {
              'type': 'object',
              'additionalProperties': false,
              'allOf':
                [
                  { '$ref': '#/components/schemas/BillingRequest' },
                  {
                    'type': 'object',
                    'additionalProperties': false,
                    'properties':
                      {
                        'items':
                          {
                            'type': 'array',
                            'items':
                              {
                                'oneOf':
                                  [
                                    {
                                      '$ref': '#/components/schemas/UpdateIvDocumentBooleanExciseItemRequest',
                                    },
                                    {
                                      '$ref': '#/components/schemas/UpdateIvDocumentEnumExciseItemRequest',
                                    },
                                  ],
                              },
                          },
                      },
                  },
                ],
            },
          'BillingRequest':
            {
              'type': 'object',
              'additionalProperties': false,
              'properties':
                {
                  'department_id':
                    { 'type': 'string', 'description': '部門ID' },
                  'title': { 'type': 'string', 'nullable': true },
                  'memo':
                    {
                      'type': 'string',
                      'nullable': true,
                      'description': 'メモ',
                    },
                  'payment_condition':
                    {
                      'type': 'string',
                      'nullable': true,
                      'description': '支払先',
                    },
                  'billing_date':
                    {
                      'type': 'string',
                      'nullable': true,
                      'format': 'date',
                      'description': '請求日',
                    },
                  'due_date':
                    {
                      'type': 'string',
                      'nullable': true,
                      'format': 'date',
                      'description': '支払い期限',
                    },
                  'sales_date':
                    {
                      'type': 'string',
                      'nullable': true,
                      'format': 'date',
                      'description': 'Sales date',
                    },
                  'billing_number':
                    {
                      'type': 'string',
                      'nullable': true,
                      'description': 'Billing number',
                    },
                  'note':
                    {
                      'type': 'string',
                      'nullable': true,
                      'description': '備考',
                    },
                  'document_name': { 'type': 'string', 'nullable': true },
                  'tags':
                    {
                      'type': 'string',
                      'description': "カンマ区切り。ex: 'hoge,fuga'",
                    },
                },
            },
        },
      'securitySchemes':
        {
          'iv_auth':
            {
              'type': 'oauth2',
              'flows':
                {
                  'authorizationCode':
                    {
                      'authorizationUrl': '/oauth/authorize',
                      'tokenUrl': '/oauth/token',
                      'refreshUrl': '/oauth/token',
                      'scopes':
                        {
                          'read': 'Grant read-only access to all your data',
                          'write': 'Grant read and write access to all your data',
                        },
                    },
                },
            },
        },
    },
}
